{ "_id" : "template/text/1", "cml" : "<h2 class='legend'>What is the relation between <span class='t1'>{{terms_focus}}</span> and <span class='t2'>{{terms_candidate}}</span>?</h2>\nYou may read these examples to help understand the terms:\n<div class='examples'>\n  <p>{{examples_passage1}}</p>\n  <p>{{examples_passage2}}</p>\n</div>\n\n<cml:checkboxes class='ans' name=\"answer\" label=\"Select all options that apply:\" validates=\"required\">\n  <cml:checkbox value=\"atypeofb\" label=\"&lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt; is a &lt;b&gt;type&lt;/b&gt; of &lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt;. For example, &lt;i&gt;Yacht&lt;/i&gt; and &lt;i&gt;Boat&lt;/i&gt;\"/>\n  <cml:checkbox value=\"btypeofa\" label=\"&lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt; is a &lt;b&gt;type&lt;/b&gt; of &lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt;\"/>\n  <cml:checkbox value=\"sametype\" label=\"&lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt; and &lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt; are of the &lt;b&gt;same type&lt;/b&gt;. For example, &lt;i&gt;Lion&lt;/i&gt; and &lt;i&gt;Tiger&lt;/i&gt;\"/>\n  <cml:checkbox value=\"aabbrofb\" label=\"&lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt; is an &lt;b&gt;abbreviation&lt;/b&gt; of &lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt;. For example, &lt;i&gt;Dr&lt;/i&gt; and &lt;i&gt;Doctor&lt;/i&gt;\"/>\n  <cml:checkbox value=\"babbrofa\" label=\"&lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt; is an &lt;b&gt;abbreviation&lt;/b&gt; of &lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt;\"/>\n  <cml:checkbox value=\"synonym\" label=\"&lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt; is a &lt;b&gt;synonym&lt;/b&gt; (the same) of &lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt;. For example, &lt;i&gt;Big&lt;/i&gt; and &lt;i&gt;Large&lt;/i&gt;\"/>\n  <cml:checkbox value=\"antonym\" label=\"&lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt; is an &lt;b&gt;antonym&lt;/b&gt; (the opposite) of &lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt;. For example, &lt;i&gt;Hot&lt;/i&gt; and &lt;i&gt;Cold&lt;/i&gt;\"/>\n  <cml:checkbox value=\"related\" label=\"&lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt; is &lt;b&gt;associated&lt;/b&gt; to &lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt;. For example, &lt;i&gt;Boat&lt;/i&gt; and &lt;i&gt;Harbor&lt;/i&gt;\"/>\n  <cml:checkbox value=\"none\" label=\"&lt;b&gt;None&lt;/b&gt; of the above\"/>\n</cml:checkboxes>\n\n<cml:checkboxes name=\"other\" label=\"Please explain why:\" validates=\"required\" only-if=\"answer:[none]\">\n  <cml:checkbox value=\"notrelated\" label=\"&lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt; and &lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt; are &lt;b&gt;not related&lt;/b&gt; at all\"/>\n  <cml:checkbox value=\"ambiguousa\" label=\"&lt;span class='t1'&gt;{{terms_focus}}&lt;/span&gt; is an &lt;b&gt;ambiguous&lt;/b&gt; term\"/>\n  <cml:checkbox value=\"ambiguousb\" label=\"&lt;span class='t2'&gt;{{terms_candidate}}&lt;/span&gt; is an &lt;b&gt;ambiguous&lt;/b&gt; term\"/>\n  <cml:checkbox value=\"notclear\" label=\"The example sentences are &lt;b&gt;not clear&lt;/b&gt;\" />\n  <cml:checkbox value=\"other\" label=\"&lt;b&gt;Other&lt;/b&gt; answer:\" />\n</cml:checkboxes>\n\n<cml:text name=\"other-other\" label=\"Other:\" only-if=\"other:[other]\" validates=\"required minLength:20\" />", "format" : "text", "css" : ".t1 {\n  font-weight: bold;\n  color: #6666CD;\n}\n\n.t2 {\n  font-weight: bold;\n  color: #CD6666;\n}\n\n.cml_row {\n  margin: 5px 0 5px 0; \n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  border-radius: 5px;\n}\n\n.ans .cml_row:nth-child(4), .ans .cml_row:nth-child(6), .ans .cml_row:nth-child(8) {\n  margin-bottom:25px;\n}\n\n.cml_row label {\n  padding:4px;\n}\n\n.examples p {\n  padding:5px;\n  margin-bottom:0px;\n  font-style: italic;\n}\n\n.examples {\n  margin: 10px 0 22px;\n}", "instructions" : "Each task contains two terms that might be related to each other in some way. Select ALL options that apply to these terms. In some cases, you will need to motivate your answer.\n\n<i>The example sentences may help you understand the terms and their relation(s).</i>", "js" : "require(['jquery-noconflict'], function(jQuery) {\n  \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n\n  $('.checkboxes input').on('change', function() {\n    var that = this;\n    \n    // CF Fix: remove highlights if subquestion is hidden\n    if($(this).attr('value') == 'none' && !$(this).prop('checked')) { \n      $('.checkboxes .other').closest('.cml_row').css(\"background-color\", \"\");\n    }\n    \n    // highlight option if selected\n    $(this).closest('.cml_row').css(\"background-color\", function() {\n        return that.checked ? \"#99FF99\" : \"\";\n    });    \n  });\n  \n  // highlight tagged terms in examles\n  $('.examples').html(function(i, val) {\n    val = val.replace(/{/g, \"<span class='t1'>\").replace(/}/g, \"</span>\");\n    val = val.replace(/\\[/g, \"<span class='t2'>\").replace(/\\]/g, \"</span>\");\n    return val;\n  });\n});", "version" : 0, "type" : "Distributional Disambiguation", "user_id" : "lukasz", "updated_at" : { "$date" : 1413541658625 }, "created_at" : { "$date" : 1413541658625 } }
{ "_id" : "template/text/2", "cml" : "<label class=\"legend\">Match terms in the Question to terms in the Passage</label>\n<div class='alignment'>\n  <fieldset>\n    <legend>QUESTION:</legend>\n    <div class='passage' id='passage1'>{{question}}</div>\n  </fieldset>\n  <hr />\n  <fieldset>\n    <legend>PASSAGE:</legend>\n    <div class='passage' id='passage2'>{{passage}}</div>\n  </fieldset>\n  \n  <br />\n  \n  <cml:hidden name='rel0a' /><cml:hidden name='rel0b' />\n  <cml:hidden name='rel1a' /><cml:hidden name='rel1b' />\n  <cml:hidden name='rel2a' /><cml:hidden name='rel2b' />\n  <cml:hidden name='rel3a' /><cml:hidden name='rel3b' />\n  <cml:hidden name='rel4a' /><cml:hidden name='rel4b' />\n  <cml:hidden name='rel5a' /><cml:hidden name='rel5b' />\n  <cml:hidden name='rel6a' /><cml:hidden name='rel6b' />\n  <cml:hidden name='rel7a' /><cml:hidden name='rel7b' />\n  <cml:hidden name='rel8a' /><cml:hidden name='rel8b' />\n  <cml:hidden name='rel9a' /><cml:hidden name='rel9b' />\n  <cml:hidden name='rel10a' /><cml:hidden name='rel10b' />\n  <cml:hidden name='rel11a' /><cml:hidden name='rel11b' />\n  <cml:hidden name='rel12a' /><cml:hidden name='rel12b' />\n  <cml:hidden name='rel13a' /><cml:hidden name='rel13b' />\n  <cml:hidden name='rel14a' /><cml:hidden name='rel14b' />\n  <cml:hidden name='rel15a' /><cml:hidden name='rel15b' />\n  <cml:hidden name='rel16a' /><cml:hidden name='rel16b' />\n  <cml:hidden name='rel17a' /><cml:hidden name='rel17b' />\n  <cml:hidden name='rel18a' /><cml:hidden name='rel18b' />\n  <cml:hidden name='rel19a' /><cml:hidden name='rel19b' />\n  <cml:hidden name='rel20a' /><cml:hidden name='rel20b' />\n  <cml:hidden name='rel21a' /><cml:hidden name='rel21b' />\n  <cml:hidden name='rel22a' /><cml:hidden name='rel22b' />\n  <cml:hidden name='rel23a' /><cml:hidden name='rel23b' />\n  <cml:hidden name='rel24a' /><cml:hidden name='rel24b' />\n  <cml:hidden name='rel25a' /><cml:hidden name='rel25b' />\n  <cml:hidden name='rel26a' /><cml:hidden name='rel26b' />\n  <cml:hidden name='rel27a' /><cml:hidden name='rel27b' />\n  <cml:hidden name='rel28a' /><cml:hidden name='rel28b' />\n  <cml:hidden name='rel29a' /><cml:hidden name='rel29b' />\n  \n  \n  \n  <cml:group class='relations' label='What is the type of the matched terms?' instructions='In the question or passage, click on a WORD or drag across a RANGE OF WORDS that you want to select. Click on the current selection to undo your selection. An added match can be removed by clicking the [x]. You can select up to 30 pairs.'>\n    \n<cml:select name='rel0' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel1' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel2' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel3' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel4' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel5' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel6' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel7' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel8' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel9' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel10' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel11' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel12' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel13' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel14' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel15' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel16' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel17' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel18' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel19' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel20' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel21' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel22' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel23' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel24' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel25' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel26' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel27' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel28' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n<cml:select name='rel29' class='relation hidden' validates=\"required\"><cml:option value='ide' label=\"is identical to\"/><cml:option value='syn' label=\"is a synonym of\" /><cml:option value='gen' label=\"generalizes\" /><cml:option value='par' label=\"paraphrases\"/><cml:option value='neg' label=\"negates\"/><cml:option value='int' label=\"overlaps with\"/></cml:select>\n    \n  </cml:group>\n  <br />\n  <cml:textarea class='notPossible' name=\"notpossible\" label=\"Why is it NOT possible to match more terms?\" validates=\"required minLength:10\" instructions=\"Note that you should IGNORE SPELLING MISTAKES in the question and passage.\"/>\n\n</div>", "format" : "text", "css" : ".alignment hr { margin-top: 22px; }\n.alignment fieldset, #example fieldset { border: 1px solid #737373; padding: 10px; margin: 0px;  -webkit-border-radius: 5px;\n     -moz-border-radius: 5px;\n     border-radius: 5px; }\n.alignment legend, #example legend { border: 0px; margin: 0px; padding: 0 5px 0 5px; width: auto; font-weight: inherit; font-size: inherit; line-height: inherit; letter-spacing: inherit; }\n.passage { text-align:center; }\n\n.alignment { -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; user-select: none;}\n.alignment .passage .word:hover { cursor: pointer; cursor: hand; background-color: #C6C6C6; }\n\n.passage .word { position:relative; display: inline-block; line-height: 28px; z-index: 5; margin: 0px; padding: 4px 4px 5px 4px; -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; }\n.passage .term { position: relative; z-index: 5; margin: 0 -1px 0 -1px; padding: 6px 0px 7px 0px; }\n\n/* nested annotations are smaller than their parents */\n.passage .term .term { padding: 4px 0px 5px 0px; }\n.passage .term .term .term { padding: 2px 0px 3px 0px; }\n.passage .term .term .term .term { padding: 0px 0px 1px 0px; }\n\n.term { -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; -webkit-box-shadow: inset 0px 1px 1px #fff, 0 1px 0px 0px #000;\n     -moz-box-shadow: inset 0px 1px 1px #fff, 0 1px 0px 0px #000;\n     box-shadow: inset 0px 1px 1px #fff, 0 1px 0px 0px #000; }\n\n#example { position: relative; }\n#example .exampleRel { text-align:center; font-size:16px; font-weight:bold; letter-spacing: 1px; line-height:14px; }\n#example .term { padding-left:4px; padding-right:4px; }\n\n.relation { margin-bottom: 0px; width: inherit; }\n.relation .legend { display: none; }\n.relation .cml_row { margin: 4px 0 4px 0; }\n.relation .term { margin: 0 2px 0 2px; line-height:30px; padding: 4px 4px 5px 4px; }\n.hidden { display: none; }\n\n.instructions { color: #e32636; }\n\n.relations .instructions { padding-left: 16px; background-image: url(\"/assets/glyphicons_halflings_085_circle_info_grey.png\"); background-repeat: no-repeat; background-position: 0 2px; font-size: 10pt; height: 14px; margin: 10px 0 0 0; }\n\n.remove:hover { color: #CC0000; }\n.relation .remove { cursor: pointer; cursor: hand; }\n\n.rel0term { background-color: #8dd3c7; border: 1px solid #4d9387; }\n.rel1term { background-color: #ffffb3; border: 1px solid #bfbf73; }\n.rel2term { background-color: #bebada; border: 1px solid #7e7a9a; }\n.rel3term { background-color: #fb8072; border: 1px solid #bb4032; }\n.rel4term { background-color: #80b1d3; border: 1px solid #407193; }\n.rel5term { background-color: #fdb462; border: 1px solid #bd7422; }\n.rel6term { background-color: #b3de69; border: 1px solid #73be29; }\n.rel7term { background-color: #fccde5; border: 1px solid #bc8da5; }\n.rel8term { background-color: #d9d9d9; border: 1px solid #999999; }\n.rel9term { background-color: #bc80bd; border: 1px solid #7c407d; }\n\n.rel10term { background-color: #ccebc5; border: 1px solid #ccebc5; }\n.rel11term { background-color: #ffed6f; border: 1px solid #ffed6f; }\n.rel12term { background-color: #a6cee3; border: 1px solid #a6cee3; }\n.rel13term { background-color: #1f78b4; border: 1px solid #1f78b4; }\n.rel14term { background-color: #b2df8a; border: 1px solid #b2df8a; }\n.rel15term { background-color: #33a02c; border: 1px solid #33a02c; }\n.rel16term { background-color: #fb9a99; border: 1px solid #fb9a99; }\n.rel17term { background-color: #e31a1c; border: 1px solid #e31a1c; }\n.rel18term { background-color: #fdbf6f; border: 1px solid #fdbf6f; }\n.rel19term { background-color: #ff7f00; border: 1px solid #ff7f00; }\n\n.rel20term { background-color: #cab2d6; border: 1px solid #cab2d6; }\n.rel21term { background-color: #6a3d9a; border: 1px solid #6a3d9a; }\n.rel22term { background-color: #ffff99; border: 1px solid #ffff99; }\n.rel23term { background-color: #b15928; border: 1px solid #b15928; }\n.rel24term { background-color: #fbb4ae; border: 1px solid #fbb4ae; }\n.rel25term { background-color: #fbb4ae; border: 1px solid #fbb4ae; }\n.rel26term { background-color: #ccebc5; border: 1px solid #ccebc5; }\n.rel27term { background-color: #decbe4; border: 1px solid #decbe4; }\n.rel28term { background-color: #fed9a6; border: 1px solid #fed9a6; }\n.rel29term { background-color: #ffffcc; border: 1px solid #ffffcc; }", "instructions" : "Each task contains a QUESTION and an explanatory PASSAGE. You can IGNORE STOP WORDS (the, of, but, etc) and IGNORE SPELLING MISTAKES.\n\n<b>STEP 1:</b> Highlight WORDS in the QUESTION and highlight WORDS in the PASSAGE that match each other in meaning.\n\n<b>STEP 2:</b> Select the MATCH TYPE for each selected pair in STEP 1:\n- <b>identical:</b> the two terms are identical, ignoring spelling mistakes and plurals\n- <b>synonym:</b> the two terms mean the same thing\n- <b>generalization:</b> one term is more general than the other\n- <b>paraphrase:</b> one term says the same thing as the other, but in a different way\n- <b>negation:</b> the terms match by being opposites or through negation\n- <b>overlap:</b> the terms both have two or more words and partially overlap\n\nAn example of matching terms and their relation:\n<div id='example'>\n    <fieldset><legend>EXAMPLE QUESTION:</legend>\n      <div class=\"passage\"> <span class=\"word\">Do</span> <span class=\"term rel0term\"> <div class=\"exampleRel\" style=\"border-bottom: 6px solid #8dd3c7; width: 423px; position: absolute; z-index: 3; top: 60px; left: 70px; -webkit-transform: rotate(0.2851rad); transform:rotate(0.2851rad); -ms-transform:rotate(0.2851rad);\">is identical to</div> <span class=\"word\">isotopes</span> </span> <span class=\"word\">of</span> <span class=\"word\">the </span> \n\t  <span class=\"term rel3term\"> <span class=\"term rel2term\">  <span class=\"term rel1term\"> <span class=\"word\">same </span> </span> </span> <span class=\"word\">element</span> </span> <span class=\"word\">have</span> <span class=\"word\">the</span> <span class=\"term rel4term\"> <span class=\"word\">same </span> <span class=\"term rel5term\"> <span class=\"word\">atonic  </span> <span class=\"word\">weight?</span> </span> </span> </div>\n    </fieldset><hr><fieldset><legend>EXAMPLE PASSAGE:</legend>\n      <div class=\"passage\"> <span class=\"term rel3term\"> <div class=\"exampleRel\" style=\"border-bottom: 6px solid #fb8072; width: 196.2px; position: absolute; z-index: 3; top: -60px; left: 85px; -webkit-transform: rotate(-0.55rad);transform:rotate(-0.55rad);-ms-transform:rotate(-0.55rad);\">paraphrases</div> \n\t  <span class=\"term rel1term\"> <div class=\"exampleRel\" style=\"border-bottom: 6px solid #ffffb3; width: 199px; position: absolute; z-index: 3; top: -58px; left: 20px; -webkit-transform: rotate(-0.55rad); transform:rotate(-0.55rad);-ms-transform:rotate(-0.55rad);\">is a synonym of</div> <span class=\"word\">Similar</span> </span> <span class=\"word\">elements</span> </span> <span class=\"word\">with</span> \n\t  <span class=\"term rel4term\"> <div class=\"exampleRel\" style=\"border-bottom: 6px solid #80b1d3; width: 203.8px; position: absolute; z-index: 3; top: -60px; left: 65px; -webkit-transform: rotate(-0.5rad);transform:rotate(-0.5rad);-ms-transform:rotate(-0.5rad);\">overlaps with</div> \n\t  <span class=\"term rel2term\"> <div class=\"exampleRel\" style=\"border-bottom: 6px solid #bebada; width: 110px; position: absolute; z-index: 3; top: -47px; left: -10px; -webkit-transform: rotate(1.4rad);transform:rotate(1.4rad);-ms-transform:rotate(1.4rad);\">negates</div> <span class=\"word\">different</span> </span> \n\t  <span class=\"term rel5term\"> <div class=\"exampleRel\" style=\"border-bottom: 6px solid #fdb462; width: 219.5px; position: absolute; z-index: 3; top: -55px; left: 20px; -webkit-transform: rotate(-0.5rad);transform:rotate(-0.5rad);-ms-transform:rotate(-0.5rad);\">generalizes</div> <span class=\"word\">atomic </span> </span> <span class=\"word\">weights</span> </span> <span class=\"word\">are</span> <span class=\"word\">called</span> <span class=\"word\">an</span> <span class=\"term rel0term\"> <span class=\"word\">isotope.</span> </span> </div>\n    </fieldset>\n</div>\n<br />\n\n<b>STEP 3:</b> Repeat STEP1 and STEP2 for as many reasonably matching terms, but it is not important to cover all the terms in the PASSAGE.\n\n<b>IF YOU CANNOT FIND ENOUGH MATCHING TERMS</b>: Please explain why you cannot match any more terms, for instance why the question makes no sense.", "js" : "require(['jquery-noconflict'], function(jQuery) {\n  \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n  \n  (function($) {\n    \n    var helpers = {\n      createLine: function(first, second, options){\n        \n        // use center of first and second term\n        x1 = $(first).offset().left + $(first).width() / 2;\n        y1 = $(first).offset().top + $(first).height() / 2;\n        x2 = $(second).offset().left + $(second).width() / 2;\n        y2 = $(second).offset().top + $(second).height() / 2;\n        \n        // if term spans more than one sentence:\n        // use the center of the first word in the term\n        if($(first).height() > 40) {\n          x1 = $(first).first().find('.word').offset().left + $(first).find('.word').first().width() / 2;\n          y1 = $(first).first().find('.word').offset().top + $(first).find('.word').first().height() / 2;\n        }\n        if($(second).height() > 40) {\n          x2 = $(second).find('.word').first().offset().left + $(second).find('.word').first().width() / 2;\n          y2 = $(second).find('.word').first().offset().top + $(second).find('.word').first().height() / 2;\n        }\n        \n        // Check if browser is Internet Exploder ;)\n        var isIE = navigator.userAgent.indexOf(\"MSIE\") > -1;\n        if (x2 < x1){\n          var temp = x1;\n          x1 = x2;\n          x2 = temp;\n          temp = y1;\n          y1 = y2;\n          y2 = temp;\n        }\n        var line = document.createElement(\"div\");\n        \n        \n        // Formula for the distance between two points\n        // http://www.mathopenref.com/coorddist.html\n        var length = Math.sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));\n        \n        line.style.width = length + \"px\";\n        line.style.borderBottom = options.stroke + \"px solid\";\n        line.style.borderColor = options.color;\n        line.style.position = \"absolute\";\n        line.style.zIndex = options.zindex;\n        line.className = options.class;\n        \n\n          var angle = Math.atan((y2-y1)/(x2-x1));\n          line.style.top = y1 + 0.5*length*Math.sin(angle) + \"px\";\n          line.style.left = x1 - 0.5*length*(1 - Math.cos(angle)) + \"px\";\n          line.style.MozTransform = line.style.WebkitTransform = line.style.msTransform = line.style.OTransform= \"rotate(\" + angle + \"rad)\";\n          \n        return line;\n      }\n    }\n        \n        \n        $.fn.line = function( x1, y1, x2, y2, options, callbacks) {\n          return $(this).each(function(){\n            if($.isFunction(options)){\n              callback = options;\n              options = null;\n            }else{\n              callback = callbacks;\n            }\n            options = $.extend({}, $.fn.line.defaults, options);\n            \n            $(this).append(helpers.createLine(x1,y1,x2,y2,options)).promise().done(function(){\n              if($.isFunction(callback)){\n                callback.call();\n              }\n            });\n            \n            \n          });\n        };\n    $.fn.line.defaults = {  zindex : 10000,\n                            color : '#000000',\n                            stroke: \"1\",\n                           };\n  })(jQuery);\n  \n\n \n  // Preprocess\n    \n  \n  // Array with available relation slots\n  // Because all fields are hardcoded, they must be re-used.\n  $('.alignment').each(function() {\n    $(this)[0].relations = [];\n    $(this)[0].relId = 0; // // next unused slot\n    for(i=0;i<30;i++) {\n      $(this)[0].relations.push(0);\n    }\n  });\n  var color = ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd'\n               ,'#ccebc5','#ffed6f','#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00'\n               ,'#cab2d6','#6a3d9a','#ffff99','#b15928','#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc'];\n  \n  // remove margin between relations list\n  $('div.relation').css('margin','0px');\n  // Add remove buttons to relations\n  $('select.relation').after(function() {\n    return '<span id=\\'' + $(this).attr('name').split('[')[1].split(']')[0] + '\\' class=\\'remove\\'>[x]</span>';\n  });\n  \n  // remove relation function\n  $('.remove').click(function() {\n    $(this).siblings('.term').remove();\n    alignment =  $(this).parents('.alignment');\n\n    var id = $(this).attr('id');\n    $(alignment).find('.' + id + 'a').val(\"\");\n    $(alignment).find('.' + id + 'b').val(\"\");\n    $(this).siblings('.' + id).addClass('hidden').parent().parent().addClass('hidden');\n    $(this).siblings('.' + id).prop('selectedIndex',0); // reset selection\n    $(alignment).find('.' + id + 'term').replaceWith(function() {\n      return $(this).contents();\n    });\n    \n    // remove any partial selections to maintain color usage\n    $(alignment).find('#selection').replaceWith(function() {\n      return $(this).contents();\n    });\n    \n    $(alignment)[0].relations[id.substr(3)] = 0;\n    $(alignment)[0].relId = jQuery.inArray(0,$(alignment)[0].relations); // get next unused relation slot\n    redrawLines();\n    \n    // if less then 4 matches show notPossible field\n    var relCount = 0;\n    for(i in $(alignment)[0].relations) {\n      if($(alignment)[0].relations[i] == 1) {\n        relCount++;\n      }\n    }\n    if(relCount < 3) {\n      $(alignment).find('.notPossible').show();\n      $(alignment).find('.relTitle').hide();\n    }\n  });\n\n  // split passages\n  $(\".alignment .passage\").each(function() {\n    var words = $(this).text().split(\" \");\n    var passage = \"\";\n    $.each(words, function(i, v) {\n     passage += \"<span class='word'>\" + v + \"</span>\";\n    });\n    $(this).html(passage);\n  });\n\n  \n  \n  \n  \n  // Highlighting functions\n  \n  // highlight term\n  function highlightTerm(passage, start) {\n    var id = $(passage).parents('.alignment')[0].relId;\n    if(!$(start).parents('#selection').length && id != -1) { // if no selection is made and maximum matches is not reached\n      \n      $(passage).children('#selection').contents().unwrap();\n      start.wrapAll(\"<span class='term rel\" + id + \"term' id='selection' />\");\n\n      $(passage).find('span:not(#selection)').bind('mouseover', function(e) {\n        highlightMultiple(start, $(e.target), passage, id);\n      });\n\n    } else { // remove when click on selection\n      $(passage).children('#selection').replaceWith(function() {\n        return $(this).contents();\n      });\n    }\n  }\n  \n  // highlight range of terms\n  function highlightMultiple(start, end, passage, id) {\n    // ignore margins between elements\n\n    $(passage).find('#selection').contents().unwrap();\n    if(start.is(end)) { // single element\n      $(start).wrapAll(\"<span class='term rel\" + id + \"term' id='selection'/>\");\n    } else { // if range of elements\n      if($(passage).find('span').index(start) > $(passage).find('span').index(end)) { // swap if end is before start\n        var temp = end;\n        end = start;\n        start = temp;\n      }\n      \n      \n      if(!start.parent().not($('#selection')).is(end.parent().not($('#selection')))) {\n        // common parent element\n        var common = end.parents().not($('#selection')).has(start).first();\n        \n        if(start.parent('.term').not(common).length) { // if word has a parent term\n          start = $(common).children().has(start);\n          // $(start).parent('.term');\n        }\n        \n        if(end.parent('.term').not(common).length) {\n          end = $(common).children().has(end);\n          //end = $(end).parent('.term');\n        }\n      }\n      // highlight range\n      $(start).nextUntil(end.next()).andSelf().wrapAll(\"<span class='term rel\" + id + \"term' id='selection' />\");\n    }\n  }\n  \n\n  // update relation lines\n  function redrawLines() {\n    $('.alignment').each(function() {\n      for(i in $(this)[0].relations) {\n        if($(this)[0].relations[i] == 1) {\n          $(this).children('div.rel' + i + 'term').remove();\n          $(this).line( $(this).find('#passage1 .rel' + i + 'term'), $(this).find('#passage2 .rel' + i + 'term'), {color: color[i], stroke:6, zindex:3, class: 'rel' + i + 'term'});\n        }\n      }\n    });\n  }\n  \n  // get word range index\n  function selectionIndex(passage) {\n    var selection = $(passage).find('#selection .word');\n    var startId = $(passage).find('.word').index(selection.first());\n    if(selection.length == 1) { // single word\n      return startId;\n    } else { // range of words\n      return startId + \"-\" + (startId + selection.length - 1);\n    } \n  }\n  \n  // finish selection and link terms\n  function endSelection(alignment) {\n    var relId = $(alignment)[0].relId;\n    \n    // add terms in relation selection\n    $(alignment).find('.rel' + relId + 'a').val(selectionIndex($(alignment).find('#passage1')));\n    $(alignment).find('.rel' + relId + 'b').val(selectionIndex($(alignment).find('#passage2')));\n    $(alignment).find('.rel' + relId).before('<span class=\\'term rel' + relId + 'term\\'>' + $(alignment).find('#passage1 #selection .word').not(\":last\").append(\" \").end().text() + '</span>');\n    $(alignment).find('.rel' + relId).after('<span class=\\'term rel' + relId + 'term\\'>' + $(alignment).find('#passage2 #selection .word').not(\":last\").append(\" \").end().text() + '</span>');\n    $(alignment).find('.rel' + relId).removeClass('hidden').parent().parent().removeClass('hidden');\n    \n    // remove selection ids\n    $(alignment).find('#selection').removeAttr('id');\n\n    // set relation slot as occupied; find next slot;\n    $(alignment)[0].relations[relId] = 1;\n    $(alignment)[0].relId = jQuery.inArray(0,$(alignment)[0].relations);  // next unused slot\n    redrawLines();\n\n    // if more then three relation exists, hide explanation field\n    var relCount = 0;\n    for(i in $(alignment)[0].relations) {\n      if($(alignment)[0].relations[i] == 1) {\n        relCount++;\n      }\n      if(relCount > 2) {\n        $(alignment).find('.relTitle').show();\n        $(alignment).find('#noSelection').hide();\n        $(alignment).find('.notPossible').hide();\n        break;\n      }\n    }\n  }\n    \n  // highlighting triggers\n  $(\".passage span:not(#selection)\").mousedown(function(e) {\n    highlightTerm($(this).parents('.passage'), $(e.target));\n  }).mouseup(function() {\n    $('span').unbind('mouseover');\n    if($(this).parents('.alignment').find('#passage1 #selection').length && $(this).parents('.alignment').find('#passage2 #selection').length) {\n      endSelection($(this).parents('.alignment'));\n    }\n  });\n  \n});", "version" : 0, "type" : "Passage Alignment", "user_id" : "lukasz", "updated_at" : { "$date" : 1413542623058 }, "created_at" : { "$date" : 1413542623058 } }
{ "_id" : "template/text/3", "cml" : "<cml:radios name=\"Question\" label=\"Choose the TYPE of the question:\" validates=\"required\">\n  <div class=\"question\">{{question}}</div>\n  <cml:radio value=\"Subjective\" label=\"a question that requires an answer that is a &lt;b&gt;subjective fact&lt;/b&gt; or &lt;b&gt;an opinion&lt;/b&gt;. (e.g. &quot;Who is the best ...?&quot;) \"/>\n  <cml:radio value=\"YesNo\" label=\"a question that requires a &lt;b&gt;Yes/No answer&lt;/b&gt;. (e.g. &quot;Is the sky blue?&quot;)\"/>\n  <cml:radio value=\"NotYesNo\" label=\"a question that requires a &lt;b&gt;different answer&lt;/b&gt; than Yes/No. (e.g. &quot;What is the capital of ...?&quot;)\" id=\"\"/>\n  <cml:radio value=\"Unanswerable\" label=\"a question that &lt;b&gt;makes no sense&lt;/b&gt;. (e.g. &quot;The king?&quot;)\" id=\"\"/>\n</cml:radios>\n\n<cml:checkboxes name=\"Justifying\" label=\"Read the following passages and select ALL passages that give THE ANSWER to the question:\">\n  <div class=\"question\">{{question}}</div>\n  <cml:checkbox value=\"{{id1}}\" label=\"{{passage1}}\"/>\n  <cml:checkbox value=\"{{id2}}\" label=\"{{passage2}}\"/>\n  <cml:checkbox value=\"{{id3}}\" label=\"{{passage3}}\"/>\n  <cml:checkbox value=\"{{id4}}\" label=\"{{passage4}}\"/>\n  <cml:checkbox value=\"{{id5}}\" label=\"{{passage5}}\"/>\n  <cml:checkbox value=\"{{id6}}\" label=\"{{passage6}}\"/>\n</cml:checkboxes>\n\n<cml:radios name=\"Answer\" label=\"Based on what you have read in the previous passages, choose THE ANSWER to the question:\" validates=\"required\">\n  <div class=\"question\">{{question}}</div>\n  <cml:radio value=\"Noanswer\" label=\"None of the passages contains the answer to the question\"/>\n  <cml:radio value=\"Yes\" label=\"Yes\"/>\n  <cml:radio value=\"No\" label=\"No\"/>\n  <cml:radio value=\"Other\" label=\"Other answer:\" />\n  <cml:radio value=\"Unanswerable\" label=\"The question makes no sense (e.g. &quot;The King?&quot;)\" />\n</cml:radios>\n\n<cml:text name=\"What is the specific answer to this question?\" only-if=\"answer:[Other]\" validates=\"required\" />", "format" : "text", "css" : ".question {\n color:blue;\n  margin: 10px 0 10px 0;\n}\n.checkboxes .cml_row {\n  margin: 10px 0 10px 0; \n}", "instructions" : "Each task contains a QUESTION and explanatory PASSAGES. Please perform the steps below, and <u>IGNORE SPELLING MISTAKES</u> in the question and passages.", "js" : "require(['jquery-noconflict'], function(jQuery) {\n  \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n    \n    $('.checkboxes').html(function() {\n    var elems = $(this).children('.cml_row');\n    var i = elems.length, j, temp;\n    while ( --i )\n    {\n      j = Math.floor( Math.random() * (i - 1) );\n      temp = elems[i];\n      elems[i] = elems[j];\n      elems[j] = temp;\n    }\n    \n    $(this).children('.cml_row').remove();  \n    for(var i=0; i < elems.length; i++) {\n      if($(elems[i]).find('input').attr('value') != \"No data available\") {\n        $(this).append(elems[i]);\n      }\n    }\n  });\n\n  \n  \n  $('.checkboxes input').on('change', function() {\n    var that = this;\n    $(this).closest('.cml_row').css(\"background-color\", function() {\n        return that.checked ? \"#99FF99\" : \"\";\n    });    \n  });\n});", "version" : 0, "type" : "Passage Justification", "user_id" : "lukasz", "updated_at" : { "$date" : 1413543336128 }, "created_at" : { "$date" : 1413543336128 } }
{ "_id" : "template/text/4", "cml" : "<p>In this sentence:</p><p class=\"word_split\"><strong><em></em></strong>{{sentence}}<strong><em></em></strong></p>\n<p>Is<strong>&#160;\n{{term1}}</strong>&#160;<em>----related-to----&#160;</em><strong>&#160;\n{{term2}}?</strong></p>\n<cml:checkboxes label=\"STEP 1: Select the valid RELATION(s)\" class=\"\" instructions=\"It is important that you understand what the different relation types mean. HOVER MOUSE over each relation name to see the DEFINITION and an EXAMPLE.\" validates=\"required\" aggregation=\"avg\">\n<cml:checkbox label=\"[TREATS]\" value=\"[TREATS]\" title=\"TREATS: Therapeutic use of an ingredient or a drug, e.g. penicillin cures infection, etc.\"/>\n<cml:checkbox label=\"[PREVENTS]\" value=\"[PREVENTS]\" title=\"PREVENTS: Preventative use of an ingredient or a drug, e.g. vitamin C reduces the risk of influenza, etc.\"/>\n<cml:checkbox label=\"[DIAGNOSED_BY_TEST_OR_DRUG]\" value=\"[DIAGNOSE_BY_TEST_OR_DRUG]\" title=\"DIAGNOSE_BY_TEST_OR_DRUG: Diagnostic use of an ingredient, test or a drug, e.g.  RINNE test is used for determining hearing loss, etc.\"/>\n<cml:checkbox label=\"[CAUSES]\" value=\"[CAUSES]\" title=\"CAUSES: The underlying reason for a symptom or a disease, e.g. fever induces dizziness etc.\"/>\n<cml:checkbox label=\"[LOCATION]\" value=\"[LOCATION]\" title=\"LOCATION: Body part or anatomical structure in which disease or disorder is observed, e.g. leukimia is found in the circulatory system, etc.\"/>\n<cml:checkbox label=\"[SYMPTOM]\" value=\"[SYMPTOM]\" title=\"SYMPTOM: Deviation from normal function indicating the presence of disease or abnormality, e.g. pain is a symptom of a broken arm, etc.\"/>\n<cml:checkbox label=\"[MANIFESTATION]\" value=\"[MANIFESTATION]\" title=\"MANIFESTATION: Links disorders to the observations (manifestations) that are closely associated with them, e.g. abdominal distension is a manifestation of liver failure.\"/>\n<cml:checkbox label=\"[CONTRAINDICATES]\" value=\"[CONTRAINDICATES]\" title=\"CONTRAINDICATES: A condition that indicates that drug or treatment SHOULD NOT BE USED, e.g. patients with obesity should avoid using danazol.\"/>\n<cml:checkbox label=\"[ASSOCIATED_WITH]\" value=\"[ASSOCIATED_WITH]\" title=\"ASSOCIATED_WITH: Signs, symptoms or findings that often appear together, e.g. patients who smoke often have yellow teeth.\"/>\n<cml:checkbox label=\"[SIDE_EFFECT]\" value=\"[SIDE_EFFECT]\" title=\"SIDE_EFFECT: A secondary condition or symptom that results from a drug or treatment, e.g. use of antidepressants causes dryness in the eyes.\"/>\n<cml:checkbox label=\"[IS_A]\" value=\"[IS_A]\" title=\"IS_A: A relation that indicates that one of the terms is more specific variation of the other, e.g. migraine is a kind of headache.\"/>\n<cml:checkbox label=\"[PART_OF]\" value=\"[PART_OF]\" title=\"PART_OF: An anatomical or structural sub-component, e.g. the left ventrical is part of the heart.\"/>\n<cml:checkbox label=\"[OTHER]\" value=\"[OTHER]\" title=\"OTHER: The words are related, but not by any of the above relations.\"/>\n<cml:checkbox label=\"[NONE]\" value=\"[NONE]\" title=\"NONE: There is no relation between those words in this sentence\"/>\n</cml:checkboxes>\n<cml:text label=\"Selected relations\" class=\"relations\" name=\"relations\" validates=\"required\"/>\n<cml:text label=\"STEP 2a: Highlight in the sentence ONLY the words that express the RELATION you selected in STEP1\" class=\"highlightWords\" name=\"step_2a_copy__paste_only_the_words_from_the_sentence_that_express_the_relation_you_selected_in_step1\" instructions=\"Highlight ONLY the words that express the RELATION you have selected in STEP1. Answer N/A if you selected [NONE] in STEP 1. DO NOT copy the whole sentence.\" validates=\"required\"/>\n<cml:textarea label=\"STEP 2b: If you selected [NONE] in STEP 1, explain why\" class=\"others\" instructions=\"If you think there is a relation between those two words, but it is different than any of the relations in STEP 1, then type the relation here. If you think there is no relation between those terms, explain why do you think it is. Answer N/A if you have selected a relation in STEP 1 other than [NONE].\" validates=\"required\" default=\"Answer N/A if you have selected a relation in STEP 1 other than [NONE].\"/>", "format" : "text", "css" : ".word_split span:hover {\n    background-color:gray;\n}\n\n.cml .cml_field .instructions {\n  color: #e32636;\n}", "instructions" : "STEP 1: Read the SENTENCE below and select all the RELATION TYPE(s) that you think are expressed between the TWO HIGHLIGHTED WORDS in the text.  \n\nNote that if one of the WORDS appears multiple time you will have to consider only the highlighted one.\n\nSTEP 2a: Highlight the words from the text that support or indicate that the selected RELATION TYPE holds in this sentece. \n\n         Example 1:  \n         for the relation 'PREVENTS' between 'INFLUENZA' and 'VITAMIN C' \n         in the sentence \".... the risk of influenza is reduced by vitamin C...\"\n         highlight the words: \"reduced by\"\n\n         Example 2: \n         for the relation 'DIAGNOSE' between 'RINNE TEST' and 'HEARING LOSS' \n         in the sentence \" ... RINNE test is used for determining hearing loss ...\"\n         highlight the words: \"used for determining\"\n\nHow to HIGHLIGHT words in the TEXT:\n- click on each word in the text that you want to SELECT\n- click on already highlighted word to DE-SELECT it\n\nNOTE: You can inspect your current selection in the text field below.\n\nSTEP 2b: If you select 'NONE' in STEP 1, then explain why do you think there is no relationship between the two words in the sentence.\n\nNOTE: You are not expected to have a domain knowledge in the topic of the sentence. It doesn't matter if you don't know what the highlighted words mean. It is important to understand what the different relation types mean (in STEP 1). HOVER MOUSE over each relation name to see the DEFINITION and an EXAMPLE.", "js" : "require(['jquery-noconflict'], function(jQuery) {\n    \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n\nselectedIds = new Array();\ncheckboxes = new Array();\ninputText = document.getElementsByClassName('relations validates-required relations validates');\ninputWordsText = document.getElementsByClassName('step_2a_copy__paste_only_the_words_from_the_sentence_that_express_the_relation_you_selected_in_step1 validates-required highlightWords validates');\ninputOtherText = document.getElementsByClassName('step_2b_if_you_selected_none_in_step_1_explain_why validates-required others validates');\ninputElements = document.getElementsByTagName('input');\nsentence = document.getElementsByClassName(\"word_split\");\ndefaultMsg = inputOtherText[0].value;\n  \n    (function($){function injector(t,splitter,klass,after){var a=t.text().split(splitter),inject='';if(a.length){$(a).each(function(i,item){inject+='<span class=\"'+klass+(i+1)+'\">'+item+'</span>'+after});t.empty().append(inject)}}var methods={init:function(){return this.each(function(){injector($(this),'','char','')})},words:function(){return this.each(function(){injector($(this),' ','word',' ')})},lines:function(){return this.each(function(){var r=\"eefec303079ad17405c889e092e105b0\";injector($(this).children(\"br\").replaceWith(r).end(),r,'line','')})}};$.fn.lettering=function(method){if(method&&methods[method]){return methods[method].apply(this,[].slice.call(arguments,1))}else if(method==='letters'||!method){return methods.init.apply(this,[].slice.call(arguments,0))}$.error('Method '+method+' does not exist on jQuery.lettering');return this}})(jQuery);\n   \nArray.prototype.remove = function(x) {\n    for(i in this){\n        if(this[i].toString() == x.toString()){\n            this.splice(i,1)\n        }\n    }\n};\n  \nArray.prototype.clear = function() {\n    this.splice(0, this.length);\n};\n  \nString.prototype.trim = function () {\n  return this.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n}\n\n  $(document).ready(function(){\n    $(\".word_split\").lettering('words');\n    inputText[0].readOnly = true;\n    inputWordsText[0].readOnly = true;\n    var spans = $(\".word_split\").find(\"span\").each(function() {\n      var idNumber = $(this).attr(\"class\").slice(4);\n      $(this).attr(\"id\", idNumber);\n    });\n    for (j = 0; j < inputElements.length; j++) {\n      if (inputElements[j].type == 'checkbox') {\n        checkboxes.push(parseInt(j));\n      }\n    }\n    \n    for(i=0; i<checkboxes.length; ++i) {\n      index = checkboxes[i];\n      inputElements[index].onclick=function() {\n        if(this.checked) {\n          inputText[0].value += this.value + \" \";\n          if (this.value == \"[NONE]\") {\n            inputWordsText[0].readOnly = false;\n            inputWordsText[0].value = \"\";\n            $('span').each(function(){\n              if($(this ).css( \"background-color\",\"yellow\" )){\n                $(this ).css( \"background-color\",\"\" );\n                selectedIds.clear();\n              }\n            });\n          }\n          else {\n            if (inputText[0].value.indexOf(\"[NONE]\") != -1) {\n              inputWordsText[0].readOnly = false;\n            }\n            else {\n              inputWordsText[0].readOnly = true;  \n            }\n          }\n        }\n        else {\n          newValue = inputText[0].value.replace(this.value + \" \", \"\");\n          inputText[0].value = newValue;\n          newValue = \"\";\n          if (this.value == \"[NONE]\") {\n            inputWordsText[0].readOnly = true;\n            inputWordsText[0].value = \"\";\n          }\n          if (inputText[0].value == \"\") {\n            inputWordsText[0].value = \"\";\n            $('span').each(function(){\n              if($(this ).css( \"background-color\",\"yellow\" )){\n                $(this ).css( \"background-color\",\"\" );\n                selectedIds.clear();\n              }\n            });\n          }\n        }\n      };\n    }\n  });\n\n  inputWordsText[0].onchange = function() {\n    if (inputWordsText[0].value.trim().length == 0) {\n      inputWordsText[0].value = \"\";\n    }\n  };\n  \n  inputOtherText[0].onchange = function() {\n    if (inputOtherText[0].value.trim().length == 0) {\n      inputOtherText[0].value = \"\";\n    }\n    if (inputOtherText[0].value == defaultMsg) {\n      inputOtherText[0].value = \"\";\n    }\n  };\n  \n  sentence[0].onclick = function( event ) {\n    index = event.target.parentNode.id;\n    if (inputText[0].value.indexOf(\"[NONE]\") == -1 && inputText[0].value.trim().length != 0) {\n      if(event.target.nodeName == \"SPAN\") {\n        if(inputWordsText[0].readOnly == true) {\n          if (event.target.style.backgroundColor == \"yellow\") {\n            selectedIds.remove(event.target.id);\n            selection = updateHighlightedWords(selectedIds);\n            inputWordsText[0].value = selection;\n            event.target.style.backgroundColor = \"white\";\n          }\n          else {\n            selectedIds.push(parseInt(event.target.id));\n            event.target.style.backgroundColor = \"yellow\";\n            selection = updateHighlightedWords(selectedIds);\n            inputWordsText[0].value = selection;\n          }\n        }\n      }\n    }\n  };\n    \n    function updateHighlightedWords(arrayId) {\n      arrayId.sort(function(a, b) {\n        if (isNaN(a) || isNaN(b)) {\n          if (a > b) return 1;\n          else return -1;\n        }\n        return a - b;\n      });\n      \n      var selection2 = \"\";\n      for (var i = 0; i < arrayId.length; i ++) {\n        var num = parseInt(arrayId[i]);\n        var n = num.toString();\n        selection2 += document.getElementById(n).innerHTML + \" \";\n      }\n      \n      return selection2;\n    }\n  \n});", "version" : 0, "type" : "Relation Extraction", "user_id" : "lukasz", "updated_at" : { "$date" : 1413545152246 }, "created_at" : { "$date" : 1413545152246 } }
{ "_id" : "template/text/5", "cml" : "<p id=\"sentence\"><i>\n{{sentence}}</i></p>\n<cml:radios validates=\"required\" label=\"Which of the following statements is EXPRESSED in the SENTENCE above?\" class=\"\" name=\"direction\" gold=\"true\">\n    <cml:radio label=\"{{term1}} {{relation}} {{term2}}\" value=\"{{term1}} {{relation}} {{term2}}\"></cml:radio>\n    <cml:radio label=\"{{term2}} {{relation}} {{term1}}\" value=\"{{term2}} {{relation}} {{term1}}\"></cml:radio>\n    <cml:radio label=\"-{{relation}}- is NOT EXPRESSED between the two PHRASES\" value=\"no_relation\"></cml:radio>\n  </cml:radios>\n", "format" : "text", "css" : "#sentence {color:blue;}", "instructions" : "In the SENTENCE below there are two highlighted WORD PHRASES that we believe are related. Choose one of the options below that according to you expresses their right order.\n\nPlease consider only the capitalized WORD PHRASES (in case one of them appears multiple times in the sentence).", "js" : "\n", "version" : 0, "type" : "Relation Direction", "user_id" : "lukasz", "updated_at" : { "$date" : 1413546178862 }, "created_at" : { "$date" : 1413546178862 } }
{ "_id" : "template/text/6", "cml" : "<p class=\"word_split1\">{{sentence}}. </p>\n<cml:text validates=\"required\" label=\"In the sentence above, does the yellow selection complete the MEDICAL TERM --{{term1}}--? Remove or add words to create a complete MEDICAL TERM in the box below.\" name=\"firstFactor\" class=\"firstFactor\" />\n<cml:hidden name=\"factor1\" value=\"{{term1}}\" />\n<cml:hidden name=\"b1\" value=\"{{b1}}\" />\n<cml:hidden name=\"e1\" value=\"{{e1}}\" />\n<cml:hidden name=\"sentence\" value=\"{{sentence}}.\" />\n<cml:hidden name=\"wordId1\" value=\"\" />\n<cml:hidden name=\"saveSelectionIds1\" value=\"\" />\n<cml:hidden name=\"confirmIds1\" value=\"\" />\n<br/>\n\n<p class=\"word_split2\">{{sentence}}. </p>\n<cml:text label=\"In the sentence above, does the yellow selection complete the MEDICAL TERM --{{term2}}--?\n\nRemove or add words to create a complete MEDICAL TERM in the box below.\" name=\"secondFactor\" class=\"secondFactor\" />\n<cml:hidden name=\"factor2\" value=\"{{term2}}\" />\n<cml:hidden name=\"b2\" value=\"{{b2}}\" />\n<cml:hidden name=\"e2\" value=\"{{e2}}\" />\n<cml:hidden name=\"wordId2\" value=\"\" />\n<cml:hidden name=\"saveSelectionIds2\" value=\"\" />\n<cml:hidden name=\"confirmIds2\" value=\"\" />\n", "format" : "text", "css" : "                   \n.word_split1 {\n color:blue;\n}\n                 \n.word_split2 {\n color:blue;\n}\n\n.cml .cml_field .instructions {\n  color: #e32636;\n}\n", "instructions" : "In the SENTENCE below, does the yellow portion of the text complete the MEDICAL TERM highlighted in green? Remove or select new words from the sentence to form a complete MEDICAL TERM.\n\nClick on the words highlighted in yellow to remove them from your selection, or click on words with no highlighting to add them to your answer.\n\nExamples of complete MEDICAL TERMS:\n- Prader-Willi syndrome\n- partial anomalous venous drainage\n- anomalous venous drainage\n- preexisting schizophrenia\n- schizophrenia", "js" : "var alphas = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nvar digits = \"0123456789\";\n\nfunction isAlpha(c) {\n        return (alphas.indexOf(c) != -1);\n}\n\nfunction isDigit(c) {\n        return (digits.indexOf(c) != -1);\n}\n\nfunction isAlphaNum(c) {\n        return (isAlpha(c) || isDigit(c));\n}\n\nfunction sortNumber(a, b) {\n    return a - b;\n}\n\nfunction capitalizeTerm(sentence, b, e) {\n  return sentence.substring(0, b) + sentence.substring(b, e).toUpperCase() + sentence.substring(e, sentence.length - 1);\n}\n\nfunction getSeedTermSpan(sentence, termsInFactor, noWords, b) {\n  var index = new Array();\n  index.push(b);\n  \n  if (noWords > 1) {\n    for (i = 1; i < noWords; i ++) {\n      index.push(parseInt(parseInt(index[i - 1])) + termsInFactor[i - 1].length + 1);\n    }\n  }\n  \n  return index;\n}\n\nfunction getInitialSpan(sentence, termsInFactor, noWords, b) {\n  var index = new Array();\n  index.push(b);\n  \n  for (i = 0; i < 3; i++) {\n    var pos = parseInt(index[i]) - 1;\n    \n    // eliminate whitespace\n    while (pos >= 0 &&\n           (sentence.charAt(pos) == ' ' ||\n           sentence.charAt(pos) == '-' ||\n           sentence.charAt(pos) == '/' ||\n           sentence.charAt(pos) == '|')) {\n      pos--;\n    }\n    \n    while (pos >= 0 &&\n           sentence.charAt(pos) != ' ' &&\n           sentence.charAt(pos) != '-' &&\n           sentence.charAt(pos) != '/' &&\n           sentence.charAt(pos) != '|') {\n      pos--;\n    }\n    pos++;\n    if (pos >= 0) index.push(pos);\n  }\n  index = index.sort(sortNumber);\n  // alert(index);\n  \n  if (noWords > 1) {\n    for (i = 1; i < noWords; i ++) {\n      index.push(parseInt(parseInt(index[i + 2])) + termsInFactor[i - 1].length + 1);\n    }\n  }\n  \n  index = index.sort(sortNumber);\n  \n  for (i = 0; i < 3; i++) {\n    var pos = parseInt(index[index.length - 1]);\n    while (pos < sentence.length  &&\n           sentence.charAt(pos) != ' ' &&\n           sentence.charAt(pos) != '-' &&\n           sentence.charAt(pos) != '/' &&\n           sentence.charAt(pos) != '|') {\n      pos++;\n    }\n    \n    // eliminate whitespace\n    while (pos < sentence.length &&\n           isAlphaNum(sentence.charAt(pos)) == false) pos++;\n    \n    if (pos < sentence.length) index.push(pos);\n  }\n  \n  //alert(index);\n  \n  return index;\n  \n  /* id2 = getSeedTermSpan(sentence, termsInFactor, noWords, b);\n  return index.filter(function(n) {\n    return id2.indexOf(n) != -1\n  });*/\n}\n\nrequire(['jquery-noconflict'], function(jQuery) {\n    \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n  \n  selectedIds1 = new Array();\n  selectedIds2 = new Array();\n  selectedConfirmIds1 = new Array();\n  selectedConfirmIds2 = new Array();\n  sentence1 = document.getElementsByClassName(\"word_split1\");\n  sentence2 = document.getElementsByClassName(\"word_split2\");\n // confirmFirstFactor = document.getElementsByClassName('confirmFirstFactor validates-required confirmFirstFactor validates');\n // confirmSecondFactor = document.getElementsByClassName('confirmSecondFactor validates-required confirmSecondFactor validates');\n  chooseFirstFactor = document.getElementsByClassName('firstfactor firstFactor');\n  chooseSecondFactor = document.getElementsByClassName('secondfactor secondFactor');\n//  firstSentence = document.getElementsByClassName('sentenceFirstFactor validates-required sentenceFirstFactor validates');\n//  secondSentence = document.getElementsByClassName('sentenceSecondFactor validates-required sentenceSecondFactor validates');\n//  radioText1 = document.getElementsByClassName('question1 validates-required question1 validates');\n//  radioText2 = document.getElementsByClassName('question2 validates-required question2 validates');\n  hiddenFieldId1 = document.getElementsByClassName('wordid1');\n  hiddenFieldId2 = document.getElementsByClassName('wordid2');\n  hiddenFieldFactor1 = document.getElementsByClassName('factor1');\n  hiddenFieldFactor2 = document.getElementsByClassName('factor2');\n  allIds1 = document.getElementsByClassName('saveselectionids1');\n  allIds2 = document.getElementsByClassName('saveselectionids2');\n//  confirmIds1 = document.getElementsByClassName('confirmids1');\n//  confirmIds2 = document.getElementsByClassName('confirmids2');\n  sentenceText = document.getElementsByClassName('sentence');\n//  checkboxDoneFirst = document.getElementsByClassName('doneFirst validates-required doneFirst validates');\n  b1 = document.getElementsByClassName('b1');\n  b2 = document.getElementsByClassName('b2');\n  e1 = document.getElementsByClassName('e1');\n  e2 = document.getElementsByClassName('e2');\n  noWordsFactor1 = 0;\n  noWordsFactor2 = 0;\n  sentence1Text = \"\";\n  sentente2Text = \"\";\n  \n  var colorMap = {};\n  colorMap[\"highlighted\"] = \"rgb(0, 255, 0)\";\n  colorMap[\"selected\"] = \"rgb(255, 255, 0)\";\n  colorMap[\"hovered\"] = \"rgb(128, 128, 128)\";\n     \n  Array.prototype.remove = function(x) {\n    for(i in this){\n      if(this[i].toString() == x.toString()){\n        this.splice(i,1);\n      }\n    }\n  }\n    \n  Array.prototype.clear = function() {\n    this.splice(0, this.length);\n  };\n  \nArray.prototype.contains = function(obj) {\n    var i = this.length;\n    while (i--) {\n        if (this[i] == obj) {\n            return true;\n        }\n    }\n    return false;\n}\n  \n// this code dynamically reformats the rows' labels to accomodate the quantity of text rendered in the rows' data cells\n  $(document).ready(function(){\n    chooseFirstFactor[0].readOnly = true;\n    chooseSecondFactor[0].readOnly = true;\n  //  confirmFirstFactor[0].readOnly = true;\n  //  confirmSecondFactor[0].readOnly = true;\n    hiddenFieldFactor1[0].value = hiddenFieldFactor1[0].value.toUpperCase();\n    hiddenFieldFactor2[0].value = hiddenFieldFactor2[0].value.toUpperCase();\n    \n    noWordsFactor1 = hiddenFieldFactor1[0].value.split(/-| /).length;\n    termsInFactor1 = hiddenFieldFactor1[0].value.split(/-| /);\n    noWordsFactor2 = hiddenFieldFactor2[0].value.split(/-| /).length;\n    termsInFactor2 = hiddenFieldFactor2[0].value.split(/-| /);\n    \n   /* index1 = new Array();\n    index1.push(parseInt(b1[0].value));\n    if (noWordsFactor1 > 1) {\n      for (i = 1; i < noWordsFactor1; i ++) {\n        index1.push(parseInt(parseInt(index1[i - 1])) + termsInFactor1[i - 1].length + 1);\n      }\n    }\n\n    index2 = new Array();\n    index2.push(parseInt(b2[0].value));\n    if (noWordsFactor2 > 1) {\n      for (i = 1; i < noWordsFactor2; i ++) {\n        index2.push(parseInt(parseInt(index2[i - 1])) + termsInFactor2[i - 1].length + 1);\n      }\n    }*/\n    \n    $(\".word_split1\").text(capitalizeTerm($(\".word_split1\").text(), parseInt(b1[0].value), parseInt(e1[0].value)));\n    sentence1Text = $(\".word_split1\").text();\n    $(\".word_split2\").text(capitalizeTerm($(\".word_split2\").text(), parseInt(b2[0].value), parseInt(e2[0].value)));\n    sentence2Text = $(\".word_split2\").text();\n    //sentence2[0].value = capitalizeTerm(sentence2[0].value, parseInt(b2[0].value), parseInt(e2[0].value));\n    \n    index1 = getSeedTermSpan(sentence1Text, termsInFactor1, noWordsFactor1, parseInt(b1[0].value));\n    index2 = getSeedTermSpan(sentence2Text, termsInFactor2, noWordsFactor2, parseInt(b2[0].value));\n    //alert(index1);\n    \n    firstSpan1 = getInitialSpan(sentence1Text, termsInFactor1, noWordsFactor1, parseInt(b1[0].value));\n    firstSpan2 = getInitialSpan(sentence2Text, termsInFactor2, noWordsFactor2, parseInt(b2[0].value));\n   \n    words = $(\".word_split1\").text().split(\" \");\n    $(\".word_split1\").empty();\n    $.each(words, function(i, v) {\n      if (!v.contains(\"-\") && !v.contains(\"/\")) {\n        $(\".word_split1\").append(\" \");\n        $(\".word_split1\").append($(\"<span class=\\\"word\\\">\").text(v.substring(0, v.length)));\n      }\n      else {\n        if (v.contains(\"-\")) {\n            words2 = v.split(\"-\");\n        $(\".word_split1\").append(\" \");\n        for (i = 0; i < words2.length - 1; i ++) {\n          $(\".word_split1\").append($(\"<span class=\\\"word\\\">\").text(words2[i]));\n          $(\".word_split1\").append($(\"<span class=\\\"word\\\">\").text(\"-\"));\n        }\n        $(\".word_split1\").append($(\"<span class=\\\"word\\\">\").text(words2[words2.length-1]));\n      }\n      if (v.contains(\"/\")) {\n        words2 = v.split(\"/\");\n        $(\".word_split1\").append(\" \");\n        for (i = 0; i < words2.length - 1; i ++) {\n          $(\".word_split1\").append($(\"<span class=\\\"word\\\">\").text(words2[i]));\n          $(\".word_split1\").append($(\"<span class=\\\"word\\\">\").text(\"/\"));\n        }\n        $(\".word_split1\").append($(\"<span class=\\\"word\\\">\").text(words2[words2.length-1]));\n      }\n    }\n    });\n\n    var startOffset = 0;\n    w = $(\".word_split1\").find(\"span\").each(function() {\n      if ($(this).text() == \"-\" || $(this).text() == \"/\") {\n        startOffset = startOffset - 1;\n      }\n      var i = sentence1Text.indexOf($(this).text(), startOffset);\n      var wordType = \"\";\n      $(this).attr(\"id\", \"one\" + i);\n      \n      wordType = \"\";\n      for (j = 0; j < firstSpan1.length; j ++) {\n        if (i == firstSpan1[j]) {\n          wordType = \"selected\";\n        }\n      }\n      for (j = 0; j < index1.length; j ++) {\n        if (i == index1[j]) {\n          wordType = \"seed\";\n        }\n      }\n      if (wordType == \"seed\" || wordType == \"selected\") {\n        selectedIds1.push(i);\n        allIds1[0].value = printArray(selectedIds1);\n        selection1 = updateHighlightedWords(selectedIds1, \"one\");\n        chooseFirstFactor[0].value = selection1;\n        \n        if (wordType == \"seed\") {\n          hiddenFieldId1[0].value += i + \" \";\n          $(this).css( \"background-color\", colorMap[\"highlighted\"] );\n        }\n        else {\n          $(this).css( \"background-color\", colorMap[\"selected\"] );\n        }\n      }\n      \n      startOffset += $(this).text().length;\n      if ($(this).text() != \"-\" && $(this).text() != \"/\") {\n        startOffset = startOffset + 1;\n      }\n    });\n    \n    words = $(\".word_split2\").text().split(\" \");\n    $(\".word_split2\").empty();\n    $.each(words, function(i, v) {\n      if (!v.contains(\"-\") && !v.contains(\"/\")) {\n        $(\".word_split2\").append(\" \");\n        $(\".word_split2\").append($(\"<span class=\\\"word\\\">\").text(v.substring(0, v.length)));\n      }\n      else {\n        if (v.contains(\"-\")) {\n        words2 = v.split(\"-\");\n        $(\".word_split2\").append(\" \");\n        for (i = 0; i < words2.length - 1; i ++) {\n          $(\".word_split2\").append($(\"<span class=\\\"word\\\">\").text(words2[i]));\n          $(\".word_split2\").append($(\"<span class=\\\"word\\\">\").text(\"-\"));\n        }\n        $(\".word_split2\").append($(\"<span class=\\\"word\\\">\").text(words2[words2.length-1]));\n      }\n        if (v.contains(\"/\")) {\n        words2 = v.split(\"/\");\n        $(\".word_split2\").append(\" \");\n        for (i = 0; i < words2.length - 1; i ++) {\n          $(\".word_split2\").append($(\"<span class=\\\"word\\\">\").text(words2[i]));\n          $(\".word_split2\").append($(\"<span class=\\\"word\\\">\").text(\"/\"));\n        }\n        $(\".word_split2\").append($(\"<span class=\\\"word\\\">\").text(words2[words2.length-1]));\n      }\n      }\n    });\n    \n    var startOffset = 0;\n    w = $(\".word_split2\").find(\"span\").each(function() {\n      if ($(this).text() == \"-\" || $(this).text() == \"/\") {\n        startOffset = startOffset - 1;\n      }\n      var i = sentence2Text.indexOf($(this).text(), startOffset);\n      $(this).attr(\"id\", \"two\" + i);\n      \n      wordType = \"\";\n      for (j = 0; j < firstSpan2.length; j ++) {\n        if (i == firstSpan2[j]) {\n          wordType = \"selected\";\n        }\n      }\n      for (j = 0; j < index2.length; j ++) {\n        if (i == index2[j]) {\n          wordType = \"seed\";\n        }\n      }\n      if (wordType == \"seed\" || wordType == \"selected\") {\n        selectedIds2.push(i);\n        allIds2[0].value = printArray(selectedIds2);\n        selection2 = updateHighlightedWords(selectedIds2, \"two\");\n        chooseSecondFactor[0].value = selection2;\n        \n        if (wordType == \"seed\") {\n          hiddenFieldId2[0].value += i + \" \";\n          $(this).css( \"background-color\", colorMap[\"highlighted\"] );\n        }\n        else {\n          $(this).css( \"background-color\", colorMap[\"selected\"] );\n        }\n      }\n      \n      startOffset += $(this).text().length;\n      if ($(this).text() != \"-\" && $(this).text() != \"/\") {\n        startOffset = startOffset + 1;\n      }\n    });   \n  });\n  \n  sentence1[0].onclick = function( event ) {\n    if(event.target.nodeName == \"SPAN\" && event.target.id.substring(0,3) == \"one\" &&\n       event.target.style.backgroundColor != colorMap[\"highlighted\"]) {\n        if (selectedIds1.contains(event.target.id.slice(3))) {\n            //event.target.removeAttribute('style');\n          selectedIds1.remove(event.target.id.slice(3));\n          allIds1[0].value = printArray(selectedIds1);\n          selection1 = updateHighlightedWords(selectedIds1, \"one\");\n          chooseFirstFactor[0].value = selection1;\n          event.target.removeAttribute('style');\n          \n          if (event.target.style.backgroundColor != colorMap[\"highlighted\"]) {\n            //event.target.style.backgroundColor = colorMap[\"highlighted\"]; \n          }\n         // alert(selection1);\n        }\n        else {\n          selectedIds1.push(parseInt(event.target.id.slice(3)));\n          allIds1[0].value = printArray(selectedIds1);\n          selection1 = updateHighlightedWords(selectedIds1, \"one\");\n          chooseFirstFactor[0].value = selection1;\n          \n          if (event.target.style.backgroundColor != colorMap[\"selected\"]) {\n            event.target.style.backgroundColor = colorMap[\"selected\"];\n          }\n          /*else if (event.target.style.backgroundColor == colorMap[\"selected\"]) {\n            event.target.style.backgroundColor = colorMap[\"highlighted\"];\n          }*/\n         // alert(selection1);\n        }\n   //   }\n    }\n  }\n  \n    sentence1[0].onmouseover = function( event ) {\n      if(event.target.nodeName == \"SPAN\" && event.target.id.substring(0,3) == \"one\" &&\n         event.target.style.backgroundColor != colorMap[\"highlighted\"]) {\n         event.target.style.backgroundColor = colorMap[\"hovered\"];\n        }\n    }\n         \n    sentence1[0].onmouseout = function( event ) {\n        if(event.target.nodeName == \"SPAN\" && event.target.id.substring(0,3) == \"one\" &&\n           event.target.style.backgroundColor == colorMap[\"hovered\"]) {\n          if ( /* selectedConfirmIds1.contains(event.target.id.slice(3)) || */\n              selectedIds1.contains(event.target.id.slice(3)) &&\n              !index1.contains(event.target.id.slice(3)) ) { \n             event.target.style.backgroundColor = colorMap[\"selected\"];\n          }\n          else if (!index1.contains(event.target.id.slice(3))) {\n            event.target.removeAttribute('style');\n          }\n        }\n    }\n    \n  sentence2[0].onclick = function( event ) {\n    if(event.target.nodeName == \"SPAN\" && event.target.id.substring(0,3) == \"two\" &&\n       event.target.style.backgroundColor != colorMap[\"highlighted\"]) {\n      \n     // if(radioText2[1].checked) {\n        if (selectedIds2.contains(event.target.id.slice(3))) {\n          if (event.target.style.backgroundColor != colorMap[\"highlighted\"]) {\n            // event.target.removeAttribute('style');\n            // event.target.style.backgroundColor = colorMap[\"highlighted\"];\n          }  \n          selectedIds2.remove(event.target.id.slice(3));\n          allIds2[0].value = printArray(selectedIds2);\n          selection2 = updateHighlightedWords(selectedIds2, \"two\");\n          chooseSecondFactor[0].value = selection2;\n          event.target.removeAttribute('style');\n        }\n        else{\n          selectedIds2.push(parseInt(event.target.id.slice(3)));\n          allIds2[0].value = printArray(selectedIds2);\n          if (event.target.style.backgroundColor != colorMap[\"selected\"]) {\n            event.target.style.backgroundColor = colorMap[\"selected\"];\n          }\n          selection2 = updateHighlightedWords(selectedIds2, \"two\");\n          chooseSecondFactor[0].value = selection2;\n        }\n     // }\n    }  \n  }\n    \n    \n  \n    sentence2[0].onmouseover = function( event ) {\n      if(event.target.nodeName == \"SPAN\" && event.target.id.substring(0,3) == \"two\" &&\n         event.target.style.backgroundColor != colorMap[\"highlighted\"]) {\n         event.target.style.backgroundColor = colorMap[\"hovered\"];\n        }\n    }\n         \n    sentence2[0].onmouseout = function( event ) {\n        if(event.target.nodeName == \"SPAN\" && event.target.id.substring(0,3) == \"two\" &&\n           event.target.style.backgroundColor == colorMap[\"hovered\"]) {\n          if ( /* selectedConfirmIds1.contains(event.target.id.slice(3)) || */\n              selectedIds2.contains(event.target.id.slice(3)) &&\n              !index2.contains(event.target.id.slice(3)) ) {\n             event.target.style.backgroundColor = colorMap[\"selected\"];\n          }\n          else if (!index2.contains(event.target.id.slice(3))) {\n            event.target.removeAttribute('style');\n          }\n        }\n    }\n           \n /* radioText1[0].onclick=function(ev) {\n    $('span').each(function(){\n      if($(this ).css( \"background-color\") == colorMap[\"selected\"] ){\n        if ($(this ).attr( \"id\").contains(\"one\")) {\n            // $(this ).removeAttr(\"style\");\n            $(this ).css( \"background-color\", colorMap[\"highlighted\"]);\n        }\n      }\n    });\n    selectedIds1.clear();\n    allIds1[0].value = \"\";\n    selectedConfirmIds1.clear();\n    confirmIds1[0].value = \"\";\n    selection1 = new Array();\n  }\n    \n  radioText2[0].onclick=function(ev) {\n    $('span').each(function(){\n      if($(this ).css( \"background-color\") == colorMap[\"selected\"] ){\n        if ($(this ).attr( \"id\").contains(\"two\")) {\n          // $(this ).removeAttr(\"style\");\n          $(this ).css( \"background-color\", colorMap[\"highlighted\"]);\n        }\n      }\n    });\n    selectedIds2.clear();\n    allIds2[0].value = \"\";\n  }\n\n  radioText1[1].onclick=function(ev) {\n    $('span').each(function(){\n      if($(this ).css( \"background-color\") == colorMap[\"selected\"] ){\n        if ($(this ).attr( \"id\").contains(\"one\")) {\n          // $(this ).removeAttr(\"style\");\n          $(this ).css( \"background-color\", colorMap[\"highlighted\"]);\n        }\n      }\n    });\n    selectedConfirmIds1.clear();\n    confirmIds1[0].value = \"\";\n    selectedIds1.clear();\n    allIds1[0].value = \"\";\n    \n    /* startOffset = 0;\n    w = $(\".word_split1\").find(\"span\").each(function() {\n      if ($(this).text() == \"-\" || $(this).text() == \"/\") {\n        startOffset = startOffset - 1;\n      }\n      var i = sentenceText[0].value.indexOf($(this).text(), startOffset);\n      $(this).attr(\"id\", \"one\" + i);\n      for (j = 0; j < index1.length; j ++) {\n        if (i == index1[j]) {\n          hiddenFieldId1[0].value += i + \" \";\n          $(this).css( \"background-color\", colorMap[\"highlighted\"] );  \n        }\n      }\n      startOffset += $(this).text().length;\n      if ($(this).text() != \"-\" && $(this).text() != \"/\") {\n        startOffset = startOffset + 1;\n      }\n    });\n  }\n     \n  radioText2[1].onclick=function(ev) {\n    $('span').each(function(){\n      if($(this ).css( \"background-color\") == colorMap[\"selected\"] ){\n        if ($(this ).attr( \"id\").contains(\"two\")) {\n          // $(this ).removeAttr(\"style\");\n          $(this ).css( \"background-color\", colorMap[\"highlighted\"]);\n        }\n      }\n    });\n    selectedConfirmIds2.clear();\n    confirmIds2[0].value = \"\";\n    \n   /* var startOffset = 0;\n    w = $(\".word_split2\").find(\"span\").each(function() {\n      if ($(this).text() == \"-\" || $(this).text() == \"/\") {\n        startOffset = startOffset - 1;\n      }\n      var i = sentenceText[0].value.indexOf($(this).text(), startOffset);\n      $(this).attr(\"id\", \"two\" + i);\n      for (j = 0; j < index2.length; j ++) {\n        if (i == index2[j]) {\n          hiddenFieldId2[0].value += i + \" \";\n          $(this).css( \"background-color\", colorMap[\"highlighted\"] );  \n        }\n      }\n      startOffset += $(this).text().length;\n      if ($(this).text() != \"-\" && $(this).text() != \"/\") {\n        startOffset = startOffset + 1;\n      }\n    });   \n  }*/\n\n  /*  firstSentence[0].onblur=function(ev){\n      ok = 0;\n      \n      sent = firstSentence[0].value;\n      sentWords = sent.split(\" \");\n      if (sentWords.length < 4) {\n        firstSentence[0].value = \"\";\n      }\n      /*if (!sent.contains(hiddenFieldFactor1[0].value)) {\n        firstSentence[0].value = \"\";\n      }\n      if (sentenceText[0].value.contains(sent)) {\n        firstSentence[0].value = \"\";\n      }\n    }\n      \n      \n      secondSentence[0].onblur=function(ev){\n        ok = 0;\n        \n        sent = secondSentence[0].value;\n        sentWords = sent.split(\" \");\n        if (sentWords.length < 4) {\n          secondSentence[0].value = \"\";\n        }\n       /* if (!sent.contains(hiddenFieldFactor2[0].value)) {\n          secondSentence[0].value = \"\";\n        }\n        if (sentenceText[0].value.contains(sent)) {\n          secondSentence[0].value = \"\";\n        }   \n        if (firstSentence[0].value != \"\") {\n          sent2 = firstSentence[0].value;\n          sent2Words = sent2.split(\" \");\n          var results = new Array();\n          for (i = 0; i < sentWords.length; i++) {\n            if (sent2Words.indexOf(sentWords[i]) !== -1) {\n              results.push(sentWords[i]);\n            }\n          }\n          if (results.length > (sentWords.length / 2) ) {\n            secondSentence[0].value = \"\";\n          }\n        }\n      }*/\n    \n    function updateHighlightedWords(arrayId, indexSent) {\n      arrayId.sort(function(a, b) {\n        if (isNaN(a) || isNaN(b)) {\n          if (a > b) return 1;\n          else return -1;\n        }\n        return a - b;\n      });\n      var selection2 = \"\";\n      for (var i = 0; i < arrayId.length; i ++) {\n        var num = parseInt(arrayId[i]);\n        var n = num.toString();\n        if (indexSent == \"one\") {\n          selection2 += document.getElementById(\"one\" + n).innerHTML + \" \";\n        }\n        if (indexSent == \"two\") {\n          selection2 += document.getElementById(\"two\" + n).innerHTML + \" \";\n        }\n      }\n      return selection2;\n      }\n  \n  function printArray(array) {\n    retValue = \"\";\n    for (i = 0; i < array.length; i ++) {\n      retValue += array[i] + \"-\";\n    }\n    if (array.length != 0) {\n      retValue = retValue.slice(0, -1);\n    }\n    return retValue;\n  }\n});\n", "version" : 0, "type" : "Factor Span", "user_id" : "lukasz", "updated_at" : { "$date" : 1413546849388 }, "created_at" : { "$date" : 1413546849388 } }
{ "_id" : "template/text/7", "cml" : "<div class=\"row-fluid\">\n  <div class=\"span6\">\n    <video width=\"400\" height=\"280\" controls=\"controls\">\n      <source src=\"http://crowdtruth.org/{{storage_url}}\" type=\"video/mp4\"/>\n      <object data=\"http://crowdtruth.org/{{storage_url}}\" width=\"400\" height=\"280\">\n        <embed width=\"400\" height=\"280\" src=\"http://crowdtruth.org{{storage_url}}\"/>\n      </object>\n    </video>\n    <cml:textarea label=\"Please add the annotations (concepts) here\" name=\"addedevents\" regex=\"{seed}\" flags=\"im\" class=\"addedevents\" no_escape=\"true\" validates=\"required\" instructions=\"You are required to press the key --ENTER-- after each event typed in.\"></cml:textarea>\n    <cml:hidden name=\"times\" value=\"\" />\n    <cml:hidden name=\"confirmed\" value=\"\" />\n  </div> \n  <div class=\"span6\" id=\"conf\">\n    <p><b> Please confirm or delete the annotated concepts: </b></p>\n    <table id=\"results\"> \n      <tbody>\n      </tbody>\n    </table>\n<!--  <cml:text label=\"Number or confirmed events\" name=\"confirmedevents\" class=\"confirmedevents\" validates=\"required\" instructions=\"Please make sure you confirm/delete the typed in annotations before submitting the result.\"/>\n  <cml:hidden name=\"confirmations\" value=\"\"/> -->\n    <cml:text label=\"Selected concepts\" name=\"events\" class=\"events\" validates=\"required\"/>\n  </div> \n</div>\n\n", "format" : "text", "css" : ".cml .cml_field .instructions {\n  color: #e32636;\n}\n\n.cml .cml_field .addedevents {\n  height: 35px\n}\n\n", "instructions" : "<div class=\"row\">\n  <div class=\"span11\">\n   <p><span class=\"badge\">1</span> Each video contains/describes at least one event. Watch the video and start annotating all the events, persons, locations and time periods depicted in the video. </p>\n   <p><span class=\"badge\">2</span> Revisit all the annotations provided and delete the ones that are not correct or mistakenly added. </p>\n</div>\n</div>", "js" : "require(['jquery-noconflict'], function(jQuery) {\n    \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n\n  eventsInput = document.getElementsByClassName('events validates-required events validates');\n  addedEventsTextarea = document.getElementsByClassName('addedevents validates-required addedevents validates');\n  hiddenTimes = document.getElementsByClassName(\"times\"); \n  confirmed = document.getElementsByClassName(\"confirmed\"); \n  //confirmedevents = document.getElementsByClassName(\"confirmedevents validates-required confirmedevents validates\");\n  var index = 0;\n  var newLine = false;\n  var otherChar = false;\n  var consecutiveEnter = 0;\n  var radio = [];\n  \n  $(document).ready(function(){\n    eventsInput[0].readOnly = true;\n    //  confirmedevents[0].readOnly = true;\n  });\n    \n  addedEventsTextarea[0].onkeydown=function(e) {\n    //alert($('.span6').find('video').get(0).currentTime);\n    var keyValue = e.which;\n    var written = addedEventsTextarea[0].value;\n    arrayOfLines = written.split(\"\\n\");\n    noEvents = arrayOfLines.length;\n    if (keyValue == \"13\") {\n      newLine = true;\n      otherChar = false;\n      consecutiveEnter ++;\n      if (consecutiveEnter >= 2) {\n        var written = addedEventsTextarea[0].value;\n        addedEventsTextarea[0].value = written.substring(written.indexOf(\"\\n\") + 1);\n      }\n      else {\n        $('.times').val($('.times').val() + $('.span6').find('video').get(0).currentTime.toFixed(2) + \"---\");\n      }\n      if (arrayOfLines[noEvents - 1] != \"\") {\n        eventsInput[0].value += arrayOfLines[arrayOfLines.length - 1] + \";  \";\n        confirmed[0].value += arrayOfLines[arrayOfLines.length - 1] + \"---confirm ### \";\n        var $input = $(\"<input type='text' readonly/>\").attr(\"class\", \"typedvalue\").attr(\"id\", \"typedvalue\"+index).attr(\"value\", arrayOfLines[arrayOfLines.length - 1]).attr(\"title\", arrayOfLines[arrayOfLines.length - 1]);\n        //$(\"#conf\").append($input);\n        $('#results').append('<tr><td id=\"first' + index + '\" width=\"65%\">' + '</td><td id=\"opt' + index + '\"></td></tr>');\n        $('#first' + index).append($input);\n        var val = 0;\n        var radioBtn;\n        for(i=0; i<2; i++)\n        {\n          if (val == 0) {\n            radioBtn = $('<input type=\"radio\" class=\"radioopt\" name=\"rbtnCount' + index + '\" value=\"confirm\" checked> Confirm </input>');\n        radioBtn.appendTo('#opt' + index);\n            val++;\n            \n          }\n          else {\n            radioBtn = $('<input type=\"radio\" class=\"radioopt\" name=\"rbtnCount' + index + '\" value=\"delete\"> Delete </input>');\n            val = 0;\n          }\n          radioBtn.appendTo('#opt' + index);\n        }\n        index ++;\n        radio = [];\n      elem = document.getElementsByTagName('input');\n      for (var i = 0; i < elem.length; ++i) {\n        if (elem[i].type == 'radio') {\n          radio.push(elem[i]);\n        }\n      }\n      }\n    }\n    else {\n      otherChar = true;\n      consecutiveEnter = 0;\n    }\n    \n    if (newLine == true && otherChar == true) {  \n      newLine = false;\n      var written = addedEventsTextarea[0].value;\n      addedEventsTextarea[0].value = written.substring(written.indexOf(\"\\n\") + 1);\n    }\n//    alert(radio);\n  }\n    \n$('body').on('click', 'input.radioopt', function() {\n//  alert(radio[0].checked);\n//  alert(radio.length);\n  var allString = confirmed[0].value;\n  var values = confirmed[0].value.split(' ### ');\n  //alert(confirmed[0].value.split(' ### '));\n  for (i = 0; i < values.length - 1; i ++) {\n    var newSplit = values[i].split('---');\n//    alert(newSplit[1]);\n    if (radio[i * 2].checked && newSplit[1] == \"confirm\") {\n    //   alert(\"1\");\n      confirmed[0].value = allString.replace(values[i], newSplit[0] + \"---confirm\");\n    }\n    else if (radio[i * 2].checked && newSplit[1] == \"delete\") {\n    //  alert(\"2\");\n       confirmed[0].value = allString.replace(values[i], newSplit[0] + \"---confirm\");\n    }\n    else if (radio[i * 2 + 1].checked && newSplit[1] == \"confirm\") {\n    //  alert(\"3\");\n      confirmed[0].value = allString.replace(values[i], newSplit[0] + \"---delete\");\n    }\n    else if (radio[i * 2 + 1].checked && newSplit[1] == \"delete\") {\n    //    alert(\"4\");\n      confirmed[0].value = allString.replace(values[i], newSplit[0] + \"---delete\");\n    }\n  }\n});\n     \n});\n", "version" : 0, "type" : "Video Annotation", "user_id" : "lukasz", "updated_at" : { "$date" : 1413547315770 }, "created_at" : { "$date" : 1413547315770 } }
{ "_id" : "template/text/8", "cml" : "<div class='eventextraction'>\n  <fieldset>\n    <legend>TEXT SNIPPET:</legend>\n    <div class=\"passage\" id=\"passage\">{{description}}</div>\n  </fieldset>\n  <hr />\n<br />\n  \n  <cml:hidden name='ev0a' /> <cml:hidden name='ev1a' /> <cml:hidden name='ev2a' /> <cml:hidden name='ev3a' /> \n  <cml:hidden name='ev4a' /> <cml:hidden name='ev5a' /> <cml:hidden name='ev6a' /> <cml:hidden name='ev7a' /> \n  <cml:hidden name='ev8a' /> <cml:hidden name='ev9a' /> <cml:hidden name='ev10a' /> <cml:hidden name='ev11a' /> \n  <cml:hidden name='ev12a' /> <cml:hidden name='ev13a' /> <cml:hidden name='ev14a' /> <cml:hidden name='ev15a' /> \n  <cml:hidden name='ev16a' /> <cml:hidden name='ev17a' /> <cml:hidden name='ev18a' /> <cml:hidden name='ev19a' /> \n  <cml:hidden name='ev20a' /> <cml:hidden name='ev21a' /> <cml:hidden name='ev22a' /> <cml:hidden name='ev23a' /> \n  <cml:hidden name='ev24a' /> <cml:hidden name='ev25a' /> <cml:hidden name='ev26a' /><cml:hidden name='ev27a' /> \n  <cml:hidden name='ev28a' /> <cml:hidden name='ev29a' />\n  \n  <cml:group class='events' label='Select a TYPE for each highlighted PHRASE in the TEXT above?' name=\"type\" instructions='In the text snippet click on a WORD or drag across a RANGE OF WORDS that you want to select. An added EVENT-related concept can be removed by clicking the [x]. You can select up to 30 events and other phrases.'>\n  <cml:select name='event0' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>\n  <cml:select name='event1' class='event hidden' validates=\"required\"> <cml:option value='event' label=\"Event\" /> <cml:option value='location' label=\"Location\" /> <cml:option value='time' label=\"Time\" /> <cml:option value='participants'  label=\"Participants\"/> <cml:option value='other' label=\"Other\" /> </cml:select>  \n  <cml:select name='event2' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event3' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\"/><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event4' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event5' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event6' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event7' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event8' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event9' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\"/><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event10' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event11' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event12' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event13' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event14' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event15' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event16' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event17' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event18' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event19' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event20' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select> \n  <cml:select name='event21' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event22' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event23' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event24' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event25' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event26' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event27' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event28' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event29' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>\n  </cml:group>\n<!--  <br />\n  <cml:textarea class='sentence' name='sentence' label='Use the first highlighted concept in a sentence.' validates=\"required minLength:10\" instructions=\"Note that you should IGNORE SPELLING MISTAKES in the text snippet. Do not copy and paste words from the input sentence. Make sure your sentence contains the highlighted word phrase and has at least 4 words. If the conditions are not satisfied, your sentence will be deleted.\"/> -->\n  <br />\n    <cml:text class='verification' name='verification' label='Count the total number of highlighted and confirmed phrases.' validates=\"required integerRange:{min:1,max:30}\" instructions=\"You answer can only contain an integer between 1 and 30. If the condition is not satisfied, your number will be removed.\"/>\n\n</div>\n", "format" : "text", "css" : ".eventextraction hr { margin-top: 22px; }\n.eventextraction fieldset, #example fieldset { border: 1px solid #737373; padding: 10px; margin: 0px; }\n.eventextraction legend, #example legend { border: 0px; margin: 0px; padding: 0 5px 0 5px; width: auto; font-weight: inherit; font-size: inherit; line-height: inherit; letter-spacing: inherit; }\n.passage { text-align:center; }\n\n.eventextraction { -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; user-select: none;}\n.eventextraction .passage .word:hover { cursor: pointer; cursor: hand; background-color: #C6C6C6; }\n\n.passage .word { position:relative; display: inline-block; line-height: 24px; z-index: 5; margin: 0px; padding: 4px 4px 5px 4px; -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; }\n.passage .term { position: relative; z-index: 5; margin: 0px; padding: 6px 0px 7px 0px; }\n\n/* nested annotations are smaller than their parents */\n.passage .term .term { padding: 4px 0px 5px 0px; }\n.passage .term .term .term { padding: 2px 0px 3px 0px; }\n.passage .term .term .term .term { padding: 0px 0px 1px 0px; }\n\n.passage .term, .event .term, #assignment-instructions span { -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; }\n\n#example { position: relative; }\n#example .exampleRel { text-align:center; font-size:16px; font-weight:bold; letter-spacing: 1px; line-height:14px; }\n#example .term { padding-left:4px; padding-right:4px; }\n\n.event { margin-bottom: 0px; width: inherit; }\n.event .legend { display: none; }\n.event .term { margin: 0 2px 0 2px; line-height:30px; padding: 4px 4px 5px 4px; }\n.hidden { display: none; }\n\n.instructions { color: #e32636; }\n\n.events .instructions { padding-left: 16px; background-image: url(\"/assets/glyphicons_halflings_085_circle_info_grey.png\"); background-repeat: no-repeat; background-position: 0 2px; font-size: 10pt; height: 14px; margin: 10px 0 0 0; }\n\n.remove:hover { color: #CC0000; }\n.event .remove { cursor: pointer; cursor: hand; }\n\n.event0term { background-color: #8dd3c7; box-shadow: inset 0px 0px 0px 1px #4d9387; }\n.event1term { background-color: #ffffb3; box-shadow: inset 0px 0px 0px 1px #bfbf73; }\n.event2term { background-color: #bebada; box-shadow: inset 0px 0px 0px 1px #7e7a9a; }\n.event3term { background-color: #fb8072; box-shadow: inset 0px 0px 0px 1px #bb4032; }\n.event4term { background-color: #80b1d3; box-shadow: inset 0px 0px 0px 1px #407193; }\n.event5term { background-color: #fdb462; box-shadow: inset 0px 0px 0px 1px #bd7422; }\n.event6term { background-color: #b3de69; box-shadow: inset 0px 0px 0px 1px #73be29; }\n.event7term { background-color: #fccde5; box-shadow: inset 0px 0px 0px 1px #bc8da5; }\n.event8term { background-color: #d9d9d9; box-shadow: inset 0px 0px 0px 1px #999999; }\n.event9term { background-color: #bc80bd; box-shadow: inset 0px 0px 0px 1px #7c407d; }\n\n.event10term { background-color: #ccebc5; box-shadow: inset 0px 0px 0px 1px #ccebc5; }\n.event11term { background-color: #ffed6f; box-shadow: inset 0px 0px 0px 1px #ffed6f; }\n.event12term { background-color: #a6cee3; box-shadow: inset 0px 0px 0px 1px #a6cee3; }\n.event13term { background-color: #1f78b4; box-shadow: inset 0px 0px 0px 1px #1f78b4; }\n.event14term { background-color: #b2df8a; box-shadow: inset 0px 0px 0px 1px #b2df8a; }\n.event15term { background-color: #33a02c; box-shadow: inset 0px 0px 0px 1px #33a02c; }\n.event16term { background-color: #fb9a99; box-shadow: inset 0px 0px 0px 1px #fb9a99; }\n.event17term { background-color: #e31a1c; box-shadow: inset 0px 0px 0px 1px #e31a1c; }\n.event18term { background-color: #fdbf6f; box-shadow: inset 0px 0px 0px 1px #fdbf6f; }\n.event19term { background-color: #ff7f00; box-shadow: inset 0px 0px 0px 1px #ff7f00; }\n\n.event20term { background-color: #cab2d6; box-shadow: inset 0px 0px 0px 1px #cab2d6; }\n.event21term { background-color: #6a3d9a; box-shadow: inset 0px 0px 0px 1px #6a3d9a; }\n.event22term { background-color: #ffff99; box-shadow: inset 0px 0px 0px 1px #ffff99; }\n.event23term { background-color: #b15928; box-shadow: inset 0px 0px 0px 1px #b15928; }\n.event24term { background-color: #fbb4ae; box-shadow: inset 0px 0px 0px 1px #fbb4ae; }\n.event25term { background-color: #fbb4ae; box-shadow: inset 0px 0px 0px 1px #b3cde3; }\n.event26term { background-color: #ccebc5; box-shadow: inset 0px 0px 0px 1px #ccebc5; }\n.event27term { background-color: #decbe4; box-shadow: inset 0px 0px 0px 1px #decbe4; }\n.event28term { background-color: #fed9a6; box-shadow: inset 0px 0px 0px 1px #fed9a6; }\n.event29term { background-color: #ffffcc; box-shadow: inset 0px 0px 0px 1px #ffffcc; }\n\n\n", "instructions" : "Highlight, please.", "js" : "require(['jquery-noconflict'], function(jQuery) {\n  \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n  var totalHighlights = 0;\n  // Preprocess\n  \n  // Array with available relation slots\n  // Because all fields are hardcoded, they must be re-used.\n  $('.eventextraction').each(function() {\n    $(this)[0].events = [];\n    $(this)[0].typeId = 0; // // next unused slot\n    for(i=0;i<30;i++) {\n      $(this)[0].events.push(0);\n    }\n  });\n  var color = ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd'\n               ,'#ccebc5','#ffed6f','#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00'\n               ,'#cab2d6','#6a3d9a','#ffff99','#b15928','#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc'];\n  \n  // remove margin between relations list\n  $('div.event').css('margin','0px');\n  // Add remove buttons to relations\n  $('select.event').after(function() {\n    return '<span id=\\'' + $(this).attr('name').split('[')[1].split(']')[0] + '\\' class=\\'remove\\'>[x]</span>';\n  });\n  \n  // remove relation function\n  $('.remove').click(function() {\n    $(this).siblings('.term').remove();\n    eventextraction =  $(this).parents('.eventextraction');\n\n    var id = $(this).attr('id');\n    $(eventextraction).find('.' + id + 'a').val(\"\");\n    $(this).siblings('.' + id).addClass('hidden').parent().parent().addClass('hidden');\n    $(this).siblings('.' + id).prop('selectedIndex',0); // reset selection\n    $(eventextraction).find('.' + id + 'term').replaceWith(function() { \n      return $(this).contents();\n    });\n    \n    // remove any partial selections to maintain color usage\n    $(eventextraction).find('#selection').replaceWith(function() {\n      return $(this).contents();\n    });\n    \n    $(eventextraction)[0].events[id.substr(5)] = 0;\n    $(eventextraction)[0].typeId = jQuery.inArray(0,$(eventextraction)[0].events); // get next unused relation slot\n\n    totalHighlights --;\n  });\n  \n  // split passages\n  $(\".eventextraction .passage\").each(function() {\n    var words = $(this).text().split(\" \");\n    var passage = \"\";\n    $.each(words, function(i, v) {\n     passage += \"<span class='word'>\" + v + \"</span>\";\n    });\n    $(this).html(passage);\n  });\n\n \n  \n  // Highlighting functions\n  \n  // highlight term\n  function highlightTerm(passage, start) {\n    var id = $(passage).parents('.eventextraction')[0].typeId;\n    if(!$(start).parents('#selection').length && id != -1) { // if no selection is made and maximum matches is not reached\n      \n      $(passage).children('#selection').contents().unwrap();\n      start.wrapAll(\"<span class='term event\" + id + \"term' id='selection' />\");\n\n      $(passage).find('span:not(#selection)').bind('mouseover', function(e) {\n        highlightMultiple(start, $(e.target), passage, id);\n      });\n\n    } else { // remove when click on selection\n      $(passage).children('#selection').replaceWith(function() {\n        return $(this).contents();\n      });\n    }\n  }\n  \n  // highlight range of terms\n  function highlightMultiple(start, end, passage, id) {\n    // ignore margins between elements\n    $(passage).find('#selection').contents().unwrap();\n    if(start.is(end)) { // single element\n      $(start).wrapAll(\"<span class='term event\" + id + \"term' id='selection'/>\");\n    } else { // if range of elements\n      if($(passage).find('span').index(start) > $(passage).find('span').index(end)) { // swap if end is before start\n        var temp = end;\n        end = start;\n        start = temp;\n      }\n      \n      \n      if(!start.parent().not($('#selection')).is(end.parent().not($('#selection')))) {\n        // common parent element\n        var common = end.parents().not($('#selection')).has(start).first();\n        \n        if(start.parent('.term').not(common).length) { // if word has a parent term\n          start = $(common).children().has(start);\n          // $(start).parent('.term');\n        }\n        \n        if(end.parent('.term').not(common).length) {\n          end = $(common).children().has(end);\n          //end = $(end).parent('.term');\n        }\n      }\n      // highlight range\n      $(start).nextUntil(end.next()).andSelf().wrapAll(\"<span class='term event\" + id + \"term' id='selection' />\");\n    }\n  }\n\n  \n  // get word range index\n  function selectionIndex(passage) {\n    var selection = $(passage).find('#selection .word');\n    var startId = $(passage).find('.word').index(selection.first());\n    if(selection.length == 1) { // single word\n      return startId;\n    } else { // range of words\n      return startId + \"-\" + (startId + selection.length - 1);\n    } \n  }\n  \n  // finish selection and link terms\n  function endSelection(eventextraction) {\n    var typeId = $(eventextraction)[0].typeId;\n  //  alert(typeId); \n    // add terms in relation selection\n    $(eventextraction).find('.ev' + typeId + 'a').val(selectionIndex($(eventextraction).find('#passage')));\n    $(eventextraction).find('.event' + typeId).before('<span class=\\'term event' + typeId + 'term\\'>' + $(eventextraction).find('#passage #selection .word').not(\":last\").append(\" \").end().text() + '</span>');\n    $(eventextraction).find('.event' + typeId).removeClass('hidden').parent().parent().removeClass('hidden');\n    \n    // remove selection ids\n    $(eventextraction).find('#selection').removeAttr('id');\n\n    // set relation slot as occupied; find next slot;\n    $(eventextraction)[0].events[typeId] = 1;\n    $(eventextraction)[0].typeId = jQuery.inArray(0,$(eventextraction)[0].events);  // next unused slot\n  \n    totalHighlights ++;\n  }\n    \n  // highlighting triggers\n  $(\".passage span:not(#selection)\").mousedown(function(e) {\n    highlightTerm($(this).parents('.passage'), $(e.target));\n    \n  }).mouseup(function() {\n    $('span').unbind('mouseover');\n    if($(this).parents('.eventextraction').find('#passage #selection').length) {\n      endSelection($(this).parents('.eventextraction'));\n    }\n  });\n\n    \n  $(\".eventextraction .verification\").blur(function(e){\n   // alert($(this).val() + \"--------------\");\n    if ($(this).val() != totalHighlights) {\n      $(this).val(\"\");\n    }\n    });\n  \n});\n\n\n\n", "version" : 0, "type" : "Highlight Concepts in Videos", "user_id" : "lukasz", "updated_at" : { "$date" : 1413548966932 }, "created_at" : { "$date" : 1413548966932 } }
{ "_id" : "template/video/1", "cml" : "<div class=\"row-fluid\">\n  <div class=\"span6\">\n    <video width=\"400\" height=\"280\" controls=\"controls\">\n      <source src=\"http://crowdtruth.org/{{storage_url}}\" type=\"video/mp4\"/>\n      <object data=\"http://crowdtruth.org/{{storage_url}}\" width=\"400\" height=\"280\">\n        <embed width=\"400\" height=\"280\" src=\"http://crowdtruth.org{{storage_url}}\"/>\n      </object>\n    </video>\n    <cml:textarea label=\"Please add the annotations (concepts) here\" name=\"addedevents\" regex=\"{seed}\" flags=\"im\" class=\"addedevents\" no_escape=\"true\" validates=\"required\" instructions=\"You are required to press the key --ENTER-- after each event typed in.\"></cml:textarea>\n    <cml:hidden name=\"times\" value=\"\" />\n    <cml:hidden name=\"confirmed\" value=\"\" />\n  </div> \n  <div class=\"span6\" id=\"conf\">\n    <p><b> Please confirm or delete the annotated concepts: </b></p>\n    <table id=\"results\"> \n      <tbody>\n      </tbody>\n    </table>\n<!--  <cml:text label=\"Number or confirmed events\" name=\"confirmedevents\" class=\"confirmedevents\" validates=\"required\" instructions=\"Please make sure you confirm/delete the typed in annotations before submitting the result.\"/>\n  <cml:hidden name=\"confirmations\" value=\"\"/> -->\n    <cml:text label=\"Selected concepts\" name=\"events\" class=\"events\" validates=\"required\"/>\n  </div> \n</div>\n\n", "format" : "video", "css" : ".cml .cml_field .instructions {\n  color: #e32636;\n}\n\n.cml .cml_field .addedevents {\n  height: 35px\n}\n\n", "instructions" : "<div class=\"row\">\n  <div class=\"span11\">\n   <p><span class=\"badge\">1</span> Each video contains/describes at least one event. Watch the video and start annotating all the events, persons, locations and time periods depicted in the video. </p>\n   <p><span class=\"badge\">2</span> Revisit all the annotations provided and delete the ones that are not correct or mistakenly added. </p>\n</div>\n</div>", "js" : "require(['jquery-noconflict'], function(jQuery) {\n    \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n\n  eventsInput = document.getElementsByClassName('events validates-required events validates');\n  addedEventsTextarea = document.getElementsByClassName('addedevents validates-required addedevents validates');\n  hiddenTimes = document.getElementsByClassName(\"times\"); \n  confirmed = document.getElementsByClassName(\"confirmed\"); \n  //confirmedevents = document.getElementsByClassName(\"confirmedevents validates-required confirmedevents validates\");\n  var index = 0;\n  var newLine = false;\n  var otherChar = false;\n  var consecutiveEnter = 0;\n  var radio = [];\n  \n  $(document).ready(function(){\n    eventsInput[0].readOnly = true;\n    //  confirmedevents[0].readOnly = true;\n  });\n    \n  addedEventsTextarea[0].onkeydown=function(e) {\n    //alert($('.span6').find('video').get(0).currentTime);\n    var keyValue = e.which;\n    var written = addedEventsTextarea[0].value;\n    arrayOfLines = written.split(\"\\n\");\n    noEvents = arrayOfLines.length;\n    if (keyValue == \"13\") {\n      newLine = true;\n      otherChar = false;\n      consecutiveEnter ++;\n      if (consecutiveEnter >= 2) {\n        var written = addedEventsTextarea[0].value;\n        addedEventsTextarea[0].value = written.substring(written.indexOf(\"\\n\") + 1);\n      }\n      else {\n        $('.times').val($('.times').val() + $('.span6').find('video').get(0).currentTime.toFixed(2) + \"---\");\n      }\n      if (arrayOfLines[noEvents - 1] != \"\") {\n        eventsInput[0].value += arrayOfLines[arrayOfLines.length - 1] + \";  \";\n        confirmed[0].value += arrayOfLines[arrayOfLines.length - 1] + \"---confirm ### \";\n        var $input = $(\"<input type='text' readonly/>\").attr(\"class\", \"typedvalue\").attr(\"id\", \"typedvalue\"+index).attr(\"value\", arrayOfLines[arrayOfLines.length - 1]).attr(\"title\", arrayOfLines[arrayOfLines.length - 1]);\n        //$(\"#conf\").append($input);\n        $('#results').append('<tr><td id=\"first' + index + '\" width=\"65%\">' + '</td><td id=\"opt' + index + '\"></td></tr>');\n        $('#first' + index).append($input);\n        var val = 0;\n        var radioBtn;\n        for(i=0; i<2; i++)\n        {\n          if (val == 0) {\n            radioBtn = $('<input type=\"radio\" class=\"radioopt\" name=\"rbtnCount' + index + '\" value=\"confirm\" checked> Confirm </input>');\n        radioBtn.appendTo('#opt' + index);\n            val++;\n            \n          }\n          else {\n            radioBtn = $('<input type=\"radio\" class=\"radioopt\" name=\"rbtnCount' + index + '\" value=\"delete\"> Delete </input>');\n            val = 0;\n          }\n          radioBtn.appendTo('#opt' + index);\n        }\n        index ++;\n        radio = [];\n      elem = document.getElementsByTagName('input');\n      for (var i = 0; i < elem.length; ++i) {\n        if (elem[i].type == 'radio') {\n          radio.push(elem[i]);\n        }\n      }\n      }\n    }\n    else {\n      otherChar = true;\n      consecutiveEnter = 0;\n    }\n    \n    if (newLine == true && otherChar == true) {  \n      newLine = false;\n      var written = addedEventsTextarea[0].value;\n      addedEventsTextarea[0].value = written.substring(written.indexOf(\"\\n\") + 1);\n    }\n//    alert(radio);\n  }\n    \n$('body').on('click', 'input.radioopt', function() {\n//  alert(radio[0].checked);\n//  alert(radio.length);\n  var allString = confirmed[0].value;\n  var values = confirmed[0].value.split(' ### ');\n  //alert(confirmed[0].value.split(' ### '));\n  for (i = 0; i < values.length - 1; i ++) {\n    var newSplit = values[i].split('---');\n//    alert(newSplit[1]);\n    if (radio[i * 2].checked && newSplit[1] == \"confirm\") {\n    //   alert(\"1\");\n      confirmed[0].value = allString.replace(values[i], newSplit[0] + \"---confirm\");\n    }\n    else if (radio[i * 2].checked && newSplit[1] == \"delete\") {\n    //  alert(\"2\");\n       confirmed[0].value = allString.replace(values[i], newSplit[0] + \"---confirm\");\n    }\n    else if (radio[i * 2 + 1].checked && newSplit[1] == \"confirm\") {\n    //  alert(\"3\");\n      confirmed[0].value = allString.replace(values[i], newSplit[0] + \"---delete\");\n    }\n    else if (radio[i * 2 + 1].checked && newSplit[1] == \"delete\") {\n    //    alert(\"4\");\n      confirmed[0].value = allString.replace(values[i], newSplit[0] + \"---delete\");\n    }\n  }\n});\n     \n});\n", "version" : 0, "type" : "Video Annotation", "user_id" : "lukasz", "updated_at" : { "$date" : 1413547315770 }, "created_at" : { "$date" : 1413547315770 } }
{ "_id" : "template/video/8", "cml" : "<div class='eventextraction'>\n  <fieldset>\n    <legend>TEXT SNIPPET:</legend>\n    <div class=\"passage\" id=\"passage\">{{description}}</div>\n  </fieldset>\n  <hr />\n<br />\n  \n  <cml:hidden name='ev0a' /> <cml:hidden name='ev1a' /> <cml:hidden name='ev2a' /> <cml:hidden name='ev3a' /> \n  <cml:hidden name='ev4a' /> <cml:hidden name='ev5a' /> <cml:hidden name='ev6a' /> <cml:hidden name='ev7a' /> \n  <cml:hidden name='ev8a' /> <cml:hidden name='ev9a' /> <cml:hidden name='ev10a' /> <cml:hidden name='ev11a' /> \n  <cml:hidden name='ev12a' /> <cml:hidden name='ev13a' /> <cml:hidden name='ev14a' /> <cml:hidden name='ev15a' /> \n  <cml:hidden name='ev16a' /> <cml:hidden name='ev17a' /> <cml:hidden name='ev18a' /> <cml:hidden name='ev19a' /> \n  <cml:hidden name='ev20a' /> <cml:hidden name='ev21a' /> <cml:hidden name='ev22a' /> <cml:hidden name='ev23a' /> \n  <cml:hidden name='ev24a' /> <cml:hidden name='ev25a' /> <cml:hidden name='ev26a' /><cml:hidden name='ev27a' /> \n  <cml:hidden name='ev28a' /> <cml:hidden name='ev29a' />\n  \n  <cml:group class='events' label='Select a TYPE for each highlighted PHRASE in the TEXT above?' name=\"type\" instructions='In the text snippet click on a WORD or drag across a RANGE OF WORDS that you want to select. An added EVENT-related concept can be removed by clicking the [x]. You can select up to 30 events and other phrases.'>\n  <cml:select name='event0' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>\n  <cml:select name='event1' class='event hidden' validates=\"required\"> <cml:option value='event' label=\"Event\" /> <cml:option value='location' label=\"Location\" /> <cml:option value='time' label=\"Time\" /> <cml:option value='participants'  label=\"Participants\"/> <cml:option value='other' label=\"Other\" /> </cml:select>  \n  <cml:select name='event2' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event3' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\"/><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event4' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event5' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event6' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event7' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event8' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event9' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\"/><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event10' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event11' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event12' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event13' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event14' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event15' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event16' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event17' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event18' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event19' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event20' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select> \n  <cml:select name='event21' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event22' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event23' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event24' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event25' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event26' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event27' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event28' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>  \n  <cml:select name='event29' class='event hidden' validates=\"required\"><cml:option value='event' label=\"Event\" /><cml:option value='location' label=\"Location\" /><cml:option value='time' label=\"Time\" /><cml:option value='participants' label=\"Participants\"/><cml:option value='other' label=\"Other\" /></cml:select>\n  </cml:group>\n<!--  <br />\n  <cml:textarea class='sentence' name='sentence' label='Use the first highlighted concept in a sentence.' validates=\"required minLength:10\" instructions=\"Note that you should IGNORE SPELLING MISTAKES in the text snippet. Do not copy and paste words from the input sentence. Make sure your sentence contains the highlighted word phrase and has at least 4 words. If the conditions are not satisfied, your sentence will be deleted.\"/> -->\n  <br />\n    <cml:text class='verification' name='verification' label='Count the total number of highlighted and confirmed phrases.' validates=\"required integerRange:{min:1,max:30}\" instructions=\"You answer can only contain an integer between 1 and 30. If the condition is not satisfied, your number will be removed.\"/>\n\n</div>\n", "format" : "video", "css" : ".eventextraction hr { margin-top: 22px; }\n.eventextraction fieldset, #example fieldset { border: 1px solid #737373; padding: 10px; margin: 0px; }\n.eventextraction legend, #example legend { border: 0px; margin: 0px; padding: 0 5px 0 5px; width: auto; font-weight: inherit; font-size: inherit; line-height: inherit; letter-spacing: inherit; }\n.passage { text-align:center; }\n\n.eventextraction { -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; user-select: none;}\n.eventextraction .passage .word:hover { cursor: pointer; cursor: hand; background-color: #C6C6C6; }\n\n.passage .word { position:relative; display: inline-block; line-height: 24px; z-index: 5; margin: 0px; padding: 4px 4px 5px 4px; -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; }\n.passage .term { position: relative; z-index: 5; margin: 0px; padding: 6px 0px 7px 0px; }\n\n/* nested annotations are smaller than their parents */\n.passage .term .term { padding: 4px 0px 5px 0px; }\n.passage .term .term .term { padding: 2px 0px 3px 0px; }\n.passage .term .term .term .term { padding: 0px 0px 1px 0px; }\n\n.passage .term, .event .term, #assignment-instructions span { -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; }\n\n#example { position: relative; }\n#example .exampleRel { text-align:center; font-size:16px; font-weight:bold; letter-spacing: 1px; line-height:14px; }\n#example .term { padding-left:4px; padding-right:4px; }\n\n.event { margin-bottom: 0px; width: inherit; }\n.event .legend { display: none; }\n.event .term { margin: 0 2px 0 2px; line-height:30px; padding: 4px 4px 5px 4px; }\n.hidden { display: none; }\n\n.instructions { color: #e32636; }\n\n.events .instructions { padding-left: 16px; background-image: url(\"/assets/glyphicons_halflings_085_circle_info_grey.png\"); background-repeat: no-repeat; background-position: 0 2px; font-size: 10pt; height: 14px; margin: 10px 0 0 0; }\n\n.remove:hover { color: #CC0000; }\n.event .remove { cursor: pointer; cursor: hand; }\n\n.event0term { background-color: #8dd3c7; box-shadow: inset 0px 0px 0px 1px #4d9387; }\n.event1term { background-color: #ffffb3; box-shadow: inset 0px 0px 0px 1px #bfbf73; }\n.event2term { background-color: #bebada; box-shadow: inset 0px 0px 0px 1px #7e7a9a; }\n.event3term { background-color: #fb8072; box-shadow: inset 0px 0px 0px 1px #bb4032; }\n.event4term { background-color: #80b1d3; box-shadow: inset 0px 0px 0px 1px #407193; }\n.event5term { background-color: #fdb462; box-shadow: inset 0px 0px 0px 1px #bd7422; }\n.event6term { background-color: #b3de69; box-shadow: inset 0px 0px 0px 1px #73be29; }\n.event7term { background-color: #fccde5; box-shadow: inset 0px 0px 0px 1px #bc8da5; }\n.event8term { background-color: #d9d9d9; box-shadow: inset 0px 0px 0px 1px #999999; }\n.event9term { background-color: #bc80bd; box-shadow: inset 0px 0px 0px 1px #7c407d; }\n\n.event10term { background-color: #ccebc5; box-shadow: inset 0px 0px 0px 1px #ccebc5; }\n.event11term { background-color: #ffed6f; box-shadow: inset 0px 0px 0px 1px #ffed6f; }\n.event12term { background-color: #a6cee3; box-shadow: inset 0px 0px 0px 1px #a6cee3; }\n.event13term { background-color: #1f78b4; box-shadow: inset 0px 0px 0px 1px #1f78b4; }\n.event14term { background-color: #b2df8a; box-shadow: inset 0px 0px 0px 1px #b2df8a; }\n.event15term { background-color: #33a02c; box-shadow: inset 0px 0px 0px 1px #33a02c; }\n.event16term { background-color: #fb9a99; box-shadow: inset 0px 0px 0px 1px #fb9a99; }\n.event17term { background-color: #e31a1c; box-shadow: inset 0px 0px 0px 1px #e31a1c; }\n.event18term { background-color: #fdbf6f; box-shadow: inset 0px 0px 0px 1px #fdbf6f; }\n.event19term { background-color: #ff7f00; box-shadow: inset 0px 0px 0px 1px #ff7f00; }\n\n.event20term { background-color: #cab2d6; box-shadow: inset 0px 0px 0px 1px #cab2d6; }\n.event21term { background-color: #6a3d9a; box-shadow: inset 0px 0px 0px 1px #6a3d9a; }\n.event22term { background-color: #ffff99; box-shadow: inset 0px 0px 0px 1px #ffff99; }\n.event23term { background-color: #b15928; box-shadow: inset 0px 0px 0px 1px #b15928; }\n.event24term { background-color: #fbb4ae; box-shadow: inset 0px 0px 0px 1px #fbb4ae; }\n.event25term { background-color: #fbb4ae; box-shadow: inset 0px 0px 0px 1px #b3cde3; }\n.event26term { background-color: #ccebc5; box-shadow: inset 0px 0px 0px 1px #ccebc5; }\n.event27term { background-color: #decbe4; box-shadow: inset 0px 0px 0px 1px #decbe4; }\n.event28term { background-color: #fed9a6; box-shadow: inset 0px 0px 0px 1px #fed9a6; }\n.event29term { background-color: #ffffcc; box-shadow: inset 0px 0px 0px 1px #ffffcc; }\n\n\n", "instructions" : "Highlight, please.", "js" : "require(['jquery-noconflict'], function(jQuery) {\n  \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n  var totalHighlights = 0;\n  // Preprocess\n  \n  // Array with available relation slots\n  // Because all fields are hardcoded, they must be re-used.\n  $('.eventextraction').each(function() {\n    $(this)[0].events = [];\n    $(this)[0].typeId = 0; // // next unused slot\n    for(i=0;i<30;i++) {\n      $(this)[0].events.push(0);\n    }\n  });\n  var color = ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd'\n               ,'#ccebc5','#ffed6f','#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00'\n               ,'#cab2d6','#6a3d9a','#ffff99','#b15928','#fbb4ae','#b3cde3','#ccebc5','#decbe4','#fed9a6','#ffffcc'];\n  \n  // remove margin between relations list\n  $('div.event').css('margin','0px');\n  // Add remove buttons to relations\n  $('select.event').after(function() {\n    return '<span id=\\'' + $(this).attr('name').split('[')[1].split(']')[0] + '\\' class=\\'remove\\'>[x]</span>';\n  });\n  \n  // remove relation function\n  $('.remove').click(function() {\n    $(this).siblings('.term').remove();\n    eventextraction =  $(this).parents('.eventextraction');\n\n    var id = $(this).attr('id');\n    $(eventextraction).find('.' + id + 'a').val(\"\");\n    $(this).siblings('.' + id).addClass('hidden').parent().parent().addClass('hidden');\n    $(this).siblings('.' + id).prop('selectedIndex',0); // reset selection\n    $(eventextraction).find('.' + id + 'term').replaceWith(function() { \n      return $(this).contents();\n    });\n    \n    // remove any partial selections to maintain color usage\n    $(eventextraction).find('#selection').replaceWith(function() {\n      return $(this).contents();\n    });\n    \n    $(eventextraction)[0].events[id.substr(5)] = 0;\n    $(eventextraction)[0].typeId = jQuery.inArray(0,$(eventextraction)[0].events); // get next unused relation slot\n\n    totalHighlights --;\n  });\n  \n  // split passages\n  $(\".eventextraction .passage\").each(function() {\n    var words = $(this).text().split(\" \");\n    var passage = \"\";\n    $.each(words, function(i, v) {\n     passage += \"<span class='word'>\" + v + \"</span>\";\n    });\n    $(this).html(passage);\n  });\n\n \n  \n  // Highlighting functions\n  \n  // highlight term\n  function highlightTerm(passage, start) {\n    var id = $(passage).parents('.eventextraction')[0].typeId;\n    if(!$(start).parents('#selection').length && id != -1) { // if no selection is made and maximum matches is not reached\n      \n      $(passage).children('#selection').contents().unwrap();\n      start.wrapAll(\"<span class='term event\" + id + \"term' id='selection' />\");\n\n      $(passage).find('span:not(#selection)').bind('mouseover', function(e) {\n        highlightMultiple(start, $(e.target), passage, id);\n      });\n\n    } else { // remove when click on selection\n      $(passage).children('#selection').replaceWith(function() {\n        return $(this).contents();\n      });\n    }\n  }\n  \n  // highlight range of terms\n  function highlightMultiple(start, end, passage, id) {\n    // ignore margins between elements\n    $(passage).find('#selection').contents().unwrap();\n    if(start.is(end)) { // single element\n      $(start).wrapAll(\"<span class='term event\" + id + \"term' id='selection'/>\");\n    } else { // if range of elements\n      if($(passage).find('span').index(start) > $(passage).find('span').index(end)) { // swap if end is before start\n        var temp = end;\n        end = start;\n        start = temp;\n      }\n      \n      \n      if(!start.parent().not($('#selection')).is(end.parent().not($('#selection')))) {\n        // common parent element\n        var common = end.parents().not($('#selection')).has(start).first();\n        \n        if(start.parent('.term').not(common).length) { // if word has a parent term\n          start = $(common).children().has(start);\n          // $(start).parent('.term');\n        }\n        \n        if(end.parent('.term').not(common).length) {\n          end = $(common).children().has(end);\n          //end = $(end).parent('.term');\n        }\n      }\n      // highlight range\n      $(start).nextUntil(end.next()).andSelf().wrapAll(\"<span class='term event\" + id + \"term' id='selection' />\");\n    }\n  }\n\n  \n  // get word range index\n  function selectionIndex(passage) {\n    var selection = $(passage).find('#selection .word');\n    var startId = $(passage).find('.word').index(selection.first());\n    if(selection.length == 1) { // single word\n      return startId;\n    } else { // range of words\n      return startId + \"-\" + (startId + selection.length - 1);\n    } \n  }\n  \n  // finish selection and link terms\n  function endSelection(eventextraction) {\n    var typeId = $(eventextraction)[0].typeId;\n  //  alert(typeId); \n    // add terms in relation selection\n    $(eventextraction).find('.ev' + typeId + 'a').val(selectionIndex($(eventextraction).find('#passage')));\n    $(eventextraction).find('.event' + typeId).before('<span class=\\'term event' + typeId + 'term\\'>' + $(eventextraction).find('#passage #selection .word').not(\":last\").append(\" \").end().text() + '</span>');\n    $(eventextraction).find('.event' + typeId).removeClass('hidden').parent().parent().removeClass('hidden');\n    \n    // remove selection ids\n    $(eventextraction).find('#selection').removeAttr('id');\n\n    // set relation slot as occupied; find next slot;\n    $(eventextraction)[0].events[typeId] = 1;\n    $(eventextraction)[0].typeId = jQuery.inArray(0,$(eventextraction)[0].events);  // next unused slot\n  \n    totalHighlights ++;\n  }\n    \n  // highlighting triggers\n  $(\".passage span:not(#selection)\").mousedown(function(e) {\n    highlightTerm($(this).parents('.passage'), $(e.target));\n    \n  }).mouseup(function() {\n    $('span').unbind('mouseover');\n    if($(this).parents('.eventextraction').find('#passage #selection').length) {\n      endSelection($(this).parents('.eventextraction'));\n    }\n  });\n\n    \n  $(\".eventextraction .verification\").blur(function(e){\n   // alert($(this).val() + \"--------------\");\n    if ($(this).val() != totalHighlights) {\n      $(this).val(\"\");\n    }\n    });\n  \n});\n\n\n\n", "version" : 0, "type" : "Highlight Concepts in Videos", "user_id" : "lukasz", "updated_at" : { "$date" : 1413548966932 }, "created_at" : { "$date" : 1413548966932 } }
{ "_id" : { "$oid" : "54351b62ddb23e2b27bad85d" }, "type" : "ImageAnno", "user_id" : "lukasz", "instructions" : "Tag the image", "format" : "image", "version" : 0, "css" : "div.border\n{\n  border: 2px solid gray;\n  padding: 0px 10px 0px 10px;\n  border-radius: 15px;\n  margin-bottom:5px;\n}\n\ndiv.border > .text\n{\n  margin-bottom:15px; \n}\ndiv.border > .ratings\n{\n  margin-bottom:10px; \n}\n\n.border .cml_row > input[type=text]\n{\n  max-width:100%; \n}\n\n.jobComments\n{\n  text-align:left;\n}\n.jobComments\n{\n width: 60%;\n}\n\n.example_images\n{\n  height: 200px;\n}\n.example_images div\n{\n  height: 100%;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n.example_image1\n{\n  background-image: url(\"https://www.rijksmuseum.nl/nl/search/objecten?q=bloemen&p=1&ps=12&ii=1#/SK-A-799,1\");\n}\n.example_image2\n{\n  background-image: url(\"http://wisserver.st.ewi.tudelft.nl/wude/images/example_image2.jpg\");\n}\n.example_image3\n{\n  background-image: url(\"http://wisserver.st.ewi.tudelft.nl/wude/images/example_image3.jpg\");\n}\n.example_image4\n{\n  background-image: url(\"http://wisserver.st.ewi.tudelft.nl/wude/images/example_image4.jpg\");\n}\n.example_image5\n{\n  background-image: url(\"http://wisserver.st.ewi.tudelft.nl/wude/images/example_image5.jpg\");\n}\n\n#assignment-instructions\n{\n text-align:justify; \n}\n", "cml" : "<div class=\"content customTask\">\n  <cml:hidden name=\"totaltime\"></cml:hidden>\n  <cml:hidden name=\"tagtiming\"></cml:hidden>\n  <cml:hidden name=\"starttime\"></cml:hidden>\n  <cml:hidden name=\"endtime\"></cml:hidden>\n  <cml:hidden name=\"imageclicked\" value=\"false\"></cml:hidden>\n  <cml:hidden name=\"contributors_browser\" validates=\"user_agent\"></cml:hidden>\n  \n  <div class=\"row\">\n    <div class=\"span5\">\n      <a id=\"imageLink\" href=\"{{url}}\" target=\"_blank\" title=\"Click for larger version\">\n        <img src=\"{{url}}\" width=\"300\" />\n        <small>Click to enlarge</small>\n      </a>\n     \n    </div>\n    <div class=\"span5\">\n      <div class=\"border\">\n        <cml:text name=\"nrflowers\" validates=\"required positiveInteger\" label=\"How many flowers in total do you see in the image?*\" default=\"Total number (integer) of flowers\" gold=\"true\"></cml:text>\n      </div>\n      <div class=\"border\">\n        <cml:text name=\"nrflowertypes\" validates=\"required positiveInteger\" label=\"How many different flower types do you see in the image?*\" default=\"Number of different flower types\" gold=\"true\"></cml:text>\n      </div>\n      <cml:group only-if=\"!other\">\n      <div class=\"border\">\n      <cml:text name=\"name1\" validates=\"required minLength:3\" label=\"Flower type name 1*\" default=\"Scientific or common name\"></cml:text>\n      <cml:ratings name=\"confidenceName1\" label=\"Certainty*\" validates=\"required\" class=\"confidence\">\n        <cml:instructions>Choose how certain you are of the correctness of Flower name 1.</cml:instructions>\n        <cml:rating value=\"1\" label=\"1\"></cml:rating>                                         \n        <cml:rating value=\"2\" label=\"2\"></cml:rating>                                         \n        <cml:rating value=\"3\" label=\"3\"></cml:rating>                                         \n        <cml:rating value=\"4\" label=\"4\"></cml:rating>                                         \n        <cml:rating value=\"5\" label=\"5\"></cml:rating>                                         \n      </cml:ratings>\n      </div>\n      <div class=\"border\">\n        <cml:text name=\"name2\" label=\"Flower type name 2\" default=\"Scientific or common name\" instructions=\"Enter another flower name if you can.\"></cml:text>\n        <cml:ratings name=\"confidenceName2\" label=\"Certainty*\" validates=\"required\" class=\"confidence\" only-if=\"name2\">\n          <cml:instructions>Choose how certain you are of the correctness of Flower name 2.</cml:instructions>\n          <cml:rating value=\"1\" label=\"1\"></cml:rating>                                         \n          <cml:rating value=\"2\" label=\"2\"></cml:rating>                                         \n          <cml:rating value=\"3\" label=\"3\"></cml:rating>                                         \n          <cml:rating value=\"4\" label=\"4\"></cml:rating>                                         \n          <cml:rating value=\"5\" label=\"5\"></cml:rating>                                           \n        </cml:ratings>\n      </div>\n      <div class=\"border\">\n        <cml:text name=\"name3\" label=\"Flower type name 3\" default=\"Scientific or common name\" instructions=\"Enter another flower name if you can.\"></cml:text>\n        <cml:ratings name=\"confidenceName3\" label=\"Certainty*\" validates=\"required\" class=\"confidence\" only-if=\"name3\">\n          <cml:instructions>Choose how certain you are of the correctness of Flower name 3.</cml:instructions>\n          <cml:rating value=\"1\" label=\"1\"></cml:rating>                                         \n          <cml:rating value=\"2\" label=\"2\"></cml:rating>                                         \n          <cml:rating value=\"3\" label=\"3\"></cml:rating>                                         \n          <cml:rating value=\"4\" label=\"4\"></cml:rating>                                         \n          <cml:rating value=\"5\" label=\"5\"></cml:rating>                                            \n        </cml:ratings>\n        </div>\n        <div class=\"border\">\n          <cml:textarea name=\"references\" label=\"References*\" validates=\"required minLength:10\" default=\"Specify here your strategy used, URLs, book titles, etc. to arrive at the answer.\"></cml:textarea>\n        </div>\n      </cml:group>\n      \n      <cml:checkboxes label=\"Or choose one of the following and provide an explanation:\" name=\"other\">\n        <cml:checkbox label=\"The flower(s) in the image are not real (fantasy).\" value=\"fantasy\"></cml:checkbox>\n        <cml:checkbox label=\"Unable to identify of name any flower in the image\" value=\"unable\"></cml:checkbox>\n      </cml:checkboxes>\n\n      <cml:group only-if=\"other:[fantasy]||other:[unable]\">\n        <div class=\"border\">\n          <cml:textarea name=\"unableComment\" label=\"Explanation for 'unable'*\" validates=\"required minLength:10\" only-if=\"other:[unable]\" default=\"Provide an explanation why you are unable to identify or name the flowers for this image.\"></cml:textarea>\n          <cml:textarea name=\"fantasyComment\" label=\"Explanation for 'fantasy'*\" validates=\"required minLength:10\" only-if=\"other:[fantasy]\" default=\"Provide an explanation why you think the flowers on this image are not real.\"></cml:textarea>\n        </div>\n      </cml:group>\n    </div>\n  </div>\n</div>\n<div class=\"jobComments\">\n  <hr />\n  <p>If you have comments, suggestions or critique regarding the job please add them here:</p>\n  <cml:textarea name=\"jobcomments\" label=\"\"></cml:textarea>\n</div>", "js" : "require(['jquery-noconflict'], function(jQuery) {    \n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc){\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n  // Use `$` in here.\n  \n  //initialize variables\n  var timers  = new Object();  \n  var timings = new Object();\n  var startTime = new Date().getTime();\n  \n  //logic to store when the image is clicked\n  $(\"#imageLink\").click(function(){\n    $(this).parents(\".content\").find(\".imageclicked\").val(\"true\");\n  });  \n  \n  //start timer logic for onfocus for the text field\n  $(\"input[type='text'],textarea\").focus(function(event){\n    //full unique name: job[field]\n    var name = $(event.currentTarget).attr('name');   \n    timers[name] = new Date().getTime();\n  });\n  \n  //stop timer logic for blur for the text field\n  $(\"input[type='text'],textarea\").blur(function(event){\n    //the unique name of the fiels job[field]\n    var name = $(event.currentTarget).attr('name');\n    //current value of the field\n    var value =  $(event.currentTarget).val();    \n    //calculate the ms \n    var ms = new Date().getTime() - timers[name];\n    //split the name into job and field\n    var job = name.split(\"[\")[0];\n    var field = name.split(\"[\")[1].replace(\"]\",\"\");\n    //check if the timings info contains the job object\n    if(!timings.hasOwnProperty(job)){\n      //create the property\n      timings[job] = new Object();\n    }\n    //the job object exists, check if the timing array also exists\n    if(timings[job][field] ===undefined){\n      //create the array \n      timings[job][field] = new Array();\n    }\n    //the data to add to the timing array\n    var data = {\"ms\":ms,\"tag\":value,\"startTime\":timers[name]};\n    timings[job][field].push(data);\n    //Stringify and set the timing info\n    var t = JSON.stringify(timings);\n    $(this).parents(\".content\").find(\".tagtiming\").val(t);\n   });\n  \n  //logic for submitting a result\n  $(\"input[type='submit']\").click(function(e){\n    //if custom  validation fails, do not submit\n    if(!validate()){\n      e.preventDefault(); \n    }\n    \n    var endTime = new Date().getTime();\n    var totalTime = endTime - startTime;\n    $(\".starttime\").val(startTime);\n    $(\".endtime\").val(endTime);\n    $(\".totaltime\").val(totalTime);\n    \n    return validate();\n  });\n  \n  //logic for selecting an other checkbox to deselect the other\n  $(\"input[type='checkbox'].other\").click(function(){\n    //get the two checkboxed and their checked status\n    var unable = $(this).parents(\".checkboxes\").find(\"input[type='checkbox'][value='unable']\");\n    var unable_checked = unable.prop(\"checked\");\n    var fantasy= $(this).parents(\".checkboxes\").find(\"input[type='checkbox'][value='fantasy']\");\n    var fantasy_checked = fantasy.prop(\"checked\");\n    //get the current checked value of the clicked (label or checkbox) \n    var value = $(this).val();\n   \n    // if both values are checked\n    if(unable_checked && fantasy_checked){\n      console.log(\"unable_checked:\"+unable_checked+\", fantasy_checked:\"+fantasy_checked+ \", selected:\"+value);\n      if(value === \"fantasy\"){\n        //deselect both checkboxes\n        $(this).parents(\".checkboxes\").find(\"input[type='checkbox']\").prop(\"checked\",false);\n        unable.click();\n        unable.click();\n        fantasy.click();\n      }\n      if(value === \"unable\"){\n        //deselect both checkboxes\n        $(this).parents(\".checkboxes\").find(\"input[type='checkbox']\").prop(\"checked\",false);\n        fantasy.click();\n        fantasy.click();\n        unable.click();\n      }\n    }\n    //if one of the boxes is selected, scroll to top to view the fields again\n    if(unable.prop(\"checked\") || fantasy.prop(\"checked\")){\n      $(this).parents(\".content\")[0].scrollIntoView();\n    } \n  });\n  \n  \n  /*\n  * Show the validation message for the given field. Optional parameter to remove\n  * current validation messages (default = true)\n  */\n  function showValidationMessage(field, message, removeOtherValidation){\n    //removeOtherValidation defaults to true;\n    removeOtherValidation= (typeof removeOtherValidation=== \"undefined\") ? true : removeOtherValidation;\n\n     //find the cml_row the field belongs to\n    var row = field.parents(\".cml_row\").first();\n    \n    //remove previous validation\n    if(removeOtherValidation){\n      removeValidationMessage(field);\n    } \n\n    //create the outer div\n    var outerDiv = $(document.createElement(\"div\"));\n    outerDiv.css(\"margin\",\"0px\");\n    outerDiv.css(\"position\",\"relative\");\n    outerDiv.css(\"overflow\",\"hidden\");\n    outerDiv.css(\"height\",\"41px\");\n    //create the inner div\n    var innerDiv = $(document.createElement(\"div\"));\n    innerDiv.addClass(\"errorMessage\");\n    innerDiv.css(\"margin\",\"0px\");\n    innerDiv.css(\"overflow\",\"hidden\");\n    //create the text of the message\n    var text = $(document.createElement(\"p\")).append(message);\n    //add the text to the inner div\n    innerDiv.html(text);\n    //add the innerdiv to the outer div\n    outerDiv.append(innerDiv);\n    //hide the div\n    outerDiv.hide();\n    //add the outer div to the DOM before the cml_row of the field\n    outerDiv.insertBefore(row);\n    //show the outer div with a smoots animation\n    outerDiv.slideDown();\n  }\n  \n  /*\n  * Find the cml_row this field belongs to and removes all validation messages present\n  */\n  function removeValidationMessage(field){\n    //find the cml_row the field belongs to\n    var row = field.parents(\".cml_row\").first();\n    //validation is the previous DOM element before the cml_row\n    var potentialValidation = row.prev(\"div\");\n    //it should contain an element with class \"errorMessage\"\n    var hasError = potentialValidation.find(\".errorMessage\");\n    if(hasError.length>0){\n      //hide the validation with a nice animation\n      potentialValidation.slideUp();\n      //remove the validation from the DOM\n      potentialValidation.remove();\n      //recurse this method to delete other existing validation for the field\n      removeValidationMessage(field);\n    } \n  }\n  \n  /**\n  * Validates all the tasks in the job\n  */\n  function validate(){\n    var validates = true;\n    var duplicateMessage = \"Please enter different names in the fields\";\n    \n    //loop over the tasks\n    var tasks =  $(\".name1\").parents(\".customTask\");\n    tasks.each(function(index){\n      //get the values of the name fields\n      var name1 = $(this).find(\".name1\");\n      var name2 = $(this).find(\".name2\");\n      var name3 = $(this).find(\".name3\");\n      var n1 = name1.hasClass(\"has_default\") ? \"\" : name1.val();\n      var n2 = name2.hasClass(\"has_default\") ? \"\" : name2.val();\n      var n3 = name3.hasClass(\"has_default\") ? \"\" : name3.val();\n      \n      //if name2 is not empty and equals name1\n      if(n1.length >0 && n2.length >0 && n1===n2){    \n        //validation fails\n        validates = false;\n        //display a validation message\n        showValidationMessage(name2, duplicateMessage );\n      }\n      else{\n        removeValidationMessage(name2);\n      }\n      //if name3 is not empty and equals name1\n      if(n1.length >0 && n3.length >0 && n1===n3){    \n        //validation fails\n        validates = false;\n        //display a validation message\n        showValidationMessage(name3, duplicateMessage );\n      }\n      else{\n        removeValidationMessage(name3);\n      }\n      \n      //if name3 is not empty and equals name2\n      if(n2.length >0 && n3.length >0 && n2===n3){    \n        //validation fails\n        validates = false;\n        //display a validation message\n        showValidationMessage(name3, duplicateMessage );\n      }\n      else{\n        removeValidationMessage(name3); \n      }\n    });     \n    \n    //if validation fails, scroll upwards to the first failed field\n    if(!validates){\n      $(\".errorMessage:visible\").first().parents(\".border\")[0].scrollIntoView();\n    }\n    \n    return validates;\n  }\n  \n  //adding low and high to the ratings\n  $(\".confidence tr td:first-child\").text(\"Uncertain\");\n  $(\".confidence tr td:last-child\").text(\"Certain\");\n  \n  //only show the comments of the last unit\n  $(\".jobComments\").hide();\n  $(\".jobComments\").last().show();\n});\n" }
{ "_id" : { "$oid" : "543525d7ddb23e2b27bad85e" }, "type" : "NONE", "user_id" : "lukasz", "instructions" : " << NONE >>", "format" : "image", "version" : 0, "css" : "", "cml" : "NONE", "js" : "" }
{ "_id" : { "$oid" : "54353463ddb23e2b27bad860" }, "type" : "NONE", "user_id" : "lukasz", "instructions" : " << NONE >>", "format" : "text", "version" : 0, "css" : "", "cml" : "NONE", "js" : "" }
{ "_id" : { "$oid" : "543690a1ddb23e2b27bad862" }, "type" : "ImageBoundingBox", "user_id" : "lukasz", "instructions" : "<div class=\"row\">\n  <div class=\"span11\">\n   <p><span class=\"badge\">1</span> Each image contains at least one flower. Click the image to view the full-size image in a new page. Identify, count and enter the total number of flowers and the number of different types of flowers.</p>\n   <div class=\"well\">\n   <strong>We define a flower in these images as the flowering part of a plant which clearly has petals and is distinguishable from leaves. A single branch can have multiple flowers (but of the same type).</strong>\n   </div>\n   <p><span class=\"badge\">2</span> Provide for up to three identified flower types the common name in English (e.g. Sunflower) or the botanical name (e.g. Helianthus annuus). Please enter only the botanical name if you know both for the same flower type. </p>\n   <p><span class=\"badge\">3</span> For each provided flower type name indicate how certain you are the name is correct. Select 1: uncertain, 3: reasonably certain, 5: certain and 2 or 4 for intermediate values. </p>\n   <p><span class=\"badge\">4</span> In the references field provide the method (strategy, URLs, books titles, etc.) you used to arrived at your answer.</p>\n   <p><span class=\"badge\">5</span> However, if you think the flowers are not real (fantasy flowers), or if you are unable to identify or name any flower on the image, click the appropriate checkbox below and provide a reasonable explanation.</p>\n  </div>\n</div>\n<div class=\"row\">\n <div class=\"span11\">\n  <h4>The following images illustrate how flowers occur on the images. Sometimes they are prominent, sometimes only a detail.</h4>\n </div>\n</div>\n<div class=\"row example_images\">\n <div class=\"example_image1 span2\">\n </div>\n <div class=\"example_image2 span2\">\n </div>\n <div class=\"example_image3 span2\">\n </div>\n <div class=\"example_image4 span2\">\n </div>\n <div class=\"example_image5 span2\">\n </div>\n</div>", "format" : "image", "version" : 0, "css" : " div.border\n{\n  border: 2px solid gray;\n  padding: 0px 10px 0px 10px;\n  border-radius: 15px;\n  margin-bottom:5px;\n}\n\ndiv.border > .text\n{\n  margin-bottom:15px;\n}\n\ntable.ratings\n{\n  margin:auto;\n  width:75%;\n}\ntable.ratings th, table.ratings tr\n{\n  text-align:center;\n}\ntable.ratings input\n{\n  margin-left:10%;\n  margin-right:10%;\n}\n\n.annotatable\n{\n width:100%;\n}\n\ntextarea.annotorious-editor-text\n{\n width:95%;\n background-color:#4b4b4b;\n margin:auto;\n}\n\n.annotorious-editor\n{\n min-width: 340px;\n}\n\n.border .cml_row > input[type=text]\n{\n  max-width:100%;\n}\n\n.example_images\n{\n  height: 200px;\n}\n.example_images div\n{\n  height: 100%;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n.example_image1\n{\n  background-image: url(\"https://www.st.ewi.tudelft.nl/~jasper/images/example_image1.png\");\n}\n.example_image2\n{\n  background-image: url(\"https://www.st.ewi.tudelft.nl/~jasper/images/example_image2.png\");\n}\n.example_image3\n{\n  background-image: url(\"https://www.st.ewi.tudelft.nl/~jasper/images/example_image3.png\");\n}\n.example_image4\n{\n  background-image: url(\"https://www.st.ewi.tudelft.nl/~jasper/images/example_image4.png\");\n}\n.example_image5\n{\n  background-image: url(\"https://www.st.ewi.tudelft.nl/~jasper/images/example_image5.png\");\n}\n\n#assignment-instructions\n{\n text-align:justify;\n}\n\ni.icon-delete\n{\n  cursor: pointer;\n}\n.tagtypeselection\n{\n margin:5px;\n}\n\n.instruction .badge\n{\n position:relative;\n float:left;\n}\n.instruction div\n{\n margin-bottom:10px;\n}\n.instruction .instruction\n{\n margin-left:10px;\n}\n.instruction div\n{\n padding-left:35px;\n}\n\n", "cml" : "   <div class=\"content customTask\">\n  <cml:hidden name=\"totaltime\"></cml:hidden>\n  <cml:hidden name=\"tagtiming\"></cml:hidden>\n  <cml:hidden name=\"starttime\"></cml:hidden>\n  <cml:hidden name=\"endtime\"></cml:hidden>\n  <cml:hidden name=\"annotations\"></cml:hidden>\n  <cml:hidden name=\"fullsizeimageclicked\" value=\"false\"></cml:hidden>\n  <cml:hidden name=\"contributors_browser\" validates=\"user_agent\"></cml:hidden>\n  \n  <div class=\"row\">\n    <div class=\"span7\">\n      <a href=\"{{url}}\" class=\"fullsizeimage\" target=\"_blank\" title=\"Click to open a full-size version in a new tab\">Click for the full-size image</a>\n      <img class=\"annotatable\" src=\"{{url}}\" />\n    </div>\n    <div class=\"span4\">\n      <cml:text name=\"nrflowers\" validates=\"required positiveInteger\" label=\"How many FLOWERS are in this image?*\" default=\"Number of flowers\" gold=\"true\" instructions=\"Count every flower and flower bud you see on the image. Click for the full-size image if needed.\"></cml:text>\n      \n      <div class=\"cml_field\">\n        <span class=\"legend\">Tag each individual FLOWER by drawing a bounding box around it.</span>\n        <p class=\"instructions\">For each box fill in the fields of the popup.</p>\n        <div class=\"border\">\n          Number of bounding boxes: <span class=\"nrTags\">0</span>\n        </div>\n      </div>\n            \n      <cml:radios name=\"nrflowertags\" label=\"For how many of the FLOWERS you identified on this image did you provide a FLOWER NAME?*\" validates=\"required\">\n        <cml:radio label=\"0\"></cml:radio>\n        <cml:radio label=\"1\"></cml:radio>\n        <cml:radio label=\"2\"></cml:radio>\n        <cml:radio label=\"3\"></cml:radio>\n        <cml:radio label=\"4\"></cml:radio>\n        <cml:radio label=\"5\"></cml:radio>\n        <cml:radio label=\"6\"></cml:radio>\n        <cml:radio label=\"More\"></cml:radio>\n      </cml:radios>\n          \n      <cml:text name=\"nrflowertypes\" validates=\"required positiveInteger\" label=\"How many DISTINCT FLOWER TYPES (see definition in the instructions) did you identify in this image?*\" default=\"Number of flower types\" gold=\"true\" instructions=\"Count all the types, also the ones you could not name.\"></cml:text>\n          \n      <cml:textarea name=\"references\" label=\"Please provide a reference on how you got the answer to these questions*\" validates=\"required minLength:10\" default=\"Describe the search strategy you used, or the website you used to find the flower name, or the reason you already knew the names of the flowers.\"></cml:textarea>\n\n    </div>\n  </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n", "js" : " require(['jquery-noconflict'], function(jQuery) {\n  //Ensure MooTools is where it must be\n  Window.implement('$', function(el, nc) {\n    return document.id(el, nc, this.document);\n  });\n  var $ = window.jQuery;\n  // Use `$` in here.\n  window.setTimeout(function() {\n    $('body').scrollTop(1);\n  }, 1000);\n\n  //initialize variables\n  var timers = new Object();\n  var timings = new Object();\n  var startTime = new Date().getTime();\n\n  //load the annotorius dark style sheet\n  $('<link>').appendTo($('head')).attr({\n    type: 'text/css',\n    rel: 'stylesheet'\n  }).attr('href', 'https://www.st.ewi.tudelft.nl/~jasper/annotorious-0.6.2/css/theme-dark/annotorious-dark.css');\n\n  //load the script\n  $.getScript(\"https://www.st.ewi.tudelft.nl/~jasper/annotorious-0.6.2/annotorious.min.js\", function(data, textStatus, jqxhr) {\n    //for each annotatable image add the information to the editor on first load\n    anno.addHandler('onEditorShown', function(annotation) {\n      //change the type and certainty values in the editor when updating\n      if (annotation) {\n        var certainty = annotation.certainty;\n        var type = annotation.type;\n        $(\"img[src='\" + annotation.src + \"']\").parents(\".customTask\").find(\".tagtypeselection input[value='\" + type + \"']\").click();\n        $(\"img[src='\" + annotation.src + \"']\").parents(\".customTask\").find(\".ratings input[value='\" + certainty + \"']\").prop(\"checked\", true);\n      }\n\n      //get all the editors (not all editors exist during startup, so execute this each time)\n      $(\".annotorious-editor\").each(function() {\n        //check if the editor already was updated\n        if ($(this).find(\".tagtypeselection\").length === 1) {\n          //continue to the next editor\n          return true;\n        }\n        //update the editor\n        //disable the save buttons\n        $(this).find(\".annotorious-editor-button-save\").hide();\n        $(this).find(\".annotorious-editor-button-container\").prepend(\"<span style='font-size: x-small;vertical-align: sub;'>Fill the fields to enable save button</span>\");\n\n        //add the radio buttons\n        $(this).find(\"form\").prepend(\"<div class='tagtypeselection'><label class='radio inline' title='Select this option if you know the name of the flower'>  <input type='radio' name='tagtype' class='tagtypename' value='name' checked='checked' >I know the name</label><label class='radio inline' title='Select this option if you don\\'t know the name of the flower'>  <input type='radio' value='unable' name='tagtype' class='tagtypeunable' > Don\\'t know</label><label class='radio inline' title='Select this option if you think the flower is a fantasy flower'> <input type='radio' value='fantasy' name='tagtype' class='tagtypefantasy' > Fantasy</label></div>\");\n        //add the certainty score\n        $(this).find(\"form textarea\").after(getStarRating());\n\n        //set the placeholder to the right text\n        $(this).find(\".annotorious-editor-text\").attr(\"placeholder\", \"Please enter the flower name (min. 4 characters)\");\n\n        //add event when \"i know the name\" is selected\n        $(this).find(\"form .tagtypename\").change(function(data) {\n          var checked = data.srcElement.checked;\n          if (checked) {\n            $(\".annotorious-editor-text\").attr(\"placeholder\", \"Please enter the flower name (min. 4 characters)\");\n            $(this).parents(\".customTask\").find(\".annotorious-editor-text\").val(\"\");\n            $(this).parents(\".customTask\").find(\".annotorious-editor-text\").show();\n            $(this).parents(\".customTask\").find(\".annotorious-editor-text\").focus();\n          }\n        });\n        //add event when \"i don't know the name\" is selected\n        $(this).find(\"form .tagtypeunable\").change(function(data) {\n          var checked = data.srcElement.checked;\n          if (checked) {\n            $(\".annotorious-editor-text\").attr(\"placeholder\", \"Please provide the reason why you cannot name the flower? (min. 4 characters)\");\n            $(this).parents(\".customTask\").find(\".annotorious-editor-text\").val(\"\");\n            $(this).parents(\".customTask\").find(\".annotorious-editor-text\").show();\n            $(this).parents(\".customTask\").find(\".annotorious-editor-text\").focus();\n          }\n        });\n        //add event when  \"fantasy\" is selected\n        $(this).find(\"form .tagtypefantasy\").change(function(data) {\n          var checked = data.srcElement.checked;\n          if (checked) {\n            $(this).parents(\".customTask\").find(\".annotorious-editor-text\").hide();\n            $(this).parents(\".customTask\").find(\".annotorious-editor-text\").val(\"~~fantasy~~\");\n          }\n        });\n\n        //bind to show the save button if validation succeeds\n        $(this).find(\".annotorious-editor-text\").keyup(function() {\n          validateEditor($(this));\n        });\n        $(this).find(\"input\").change(function() {\n          validateEditor($(this));\n        });\n      });\n    });\n\n    anno.addHandler('onAnnotationCreated', function(annotation) {\n      //flower name or I don't know explanantion are stored in the annotation text\n      //also add the choice (\"name\", \"unable\", \"fantasy\" to the annotation)\n      //get the image for which the annotation was created\n      var img = $(\"img[src='\" + annotation.src + \"']\");\n      //get the value of the selected option\n      annotation.type = img.parents(\".customTask\").find(\".tagtypeselection input:checked\").val();\n      annotation.certainty = img.parents(\".customTask\").find(\"table.ratings input:checked\").val();\n      updateRectangleCount(annotation.src);\n      resetEditor(annotation.src);\n    });\n\n    anno.addHandler('onAnnotationUpdated', function(annotation) {\n      //flower name or I don't know explanantion are stored in the annotation text\n      //also add the choice (\"name\", \"unable\", \"fantasy\" to the annotation)\n      //get the image for which the annotation was created\n      var img = $(\"img[src='\" + annotation.src + \"']\");\n      //get the value of the selected options\n      annotation.type = img.parents(\".customTask\").find(\".tagtypeselection input:checked\").val();\n      annotation.certainty = img.parents(\".customTask\").find(\"table.ratings input:checked\").val();\n      resetEditor(annotation.src);\n    });\n\n    anno.addHandler('onAnnotationRemoved', function(annotation) {\n      updateRectangleCount(annotation.src);\n      resetEditor(annotation.src);\n    });\n  });\n\n  function validateEditor(elem) {\n    //check if a type is selected\n    var typeSelected = elem.parents(\".customTask\").find(\".tagtypeselection input:checked\").length;\n    var certaintySelected = elem.parents(\".customTask\").find(\".ratings input:checked\").length;\n    var textbox = elem.parents(\".customTask\").find(\".annotorious-editor-text:visible\");\n    if (typeSelected === 1 && certaintySelected === 1 && (!textbox.length || textbox.val().length >= 4)) {\n      elem.parents(\".customTask\").find(\".annotorious-editor-button-save\").show();\n    } else {\n      elem.parents(\".customTask\").find(\".annotorious-editor-button-save\").hide();\n    }\n  }\n\n  function updateRectangleCount(image) {\n    //get the right labels objects\n    var img = $(\"img[src='\" + image + \"']\");\n    var nrRectangles = img.parents(\".customTask\").find(\".nrTags\");\n    var count = anno.getAnnotations(image).length;\n    nrRectangles.text(count);\n  }\n\n  /**\n   * Creates the star rating. The starIndex is used to give the each set of ratings a unique name.\n   */\n  var starIndex = 1;\n\n  function getStarRating(src) {\n    var start = \"<table class='ratings'><thead><tr><th></th><th class=''>1</th><th class=''>2</th><th class=''>3</th><th class=''>4</th><th class=''>5</th><th></th></tr></thead><tbody><tr><td>Uncertain</td>\";\n    var radios = \"\";\n    for (var i = 1; i <= 5; i++) {\n      radios += \"<td class=''><input name='confidence\" + starIndex + \"' type='radio' value='\" + i + \"' class=''></td>\";\n    }\n    var end = \"<td>Certain</td></tr></tbody></table>\";\n    starIndex++;\n    return start + radios + end;\n  }\n\n  //capture when the worker clicked the full-size image\n  $(\".fullsizeimage\").click(function(e) {\n    $(this).parents(\".customTask\").find(\".fullsizeimageclicked\").val(true);\n  });\n\n\n  //start timer logic for onfocus for the text field\n  $(\"input[type='text'],textarea\").focus(function(event) {\n    //full unique name: job[field]\n    var name = $(event.currentTarget).attr('name');\n    timers[name] = new Date().getTime();\n  });\n\n  //stop timer logic for blur for the text field\n  $(\"input[type='text'],textarea\").blur(function(event) {\n    //the unique name of the fiels job[field]\n    var name = $(event.currentTarget).attr('name');\n    //current value of the field\n    var value = $(event.currentTarget).val();\n    //calculate the ms\n    var ms = new Date().getTime() - timers[name];\n    //split the name into job and field\n    var job = name.split(\"[\")[0];\n    var field = name.split(\"[\")[1].replace(\"]\", \"\");\n    //check if the timings info contains the job object\n    if (!timings.hasOwnProperty(job)) {\n      //create the property\n      timings[job] = new Object();\n    }\n    //the job object exists, check if the timing array also exists\n    if (timings[job][field] === undefined) {\n      //create the array\n      timings[job][field] = new Array();\n    }\n    //the data to add to the timing array\n    var data = {\n      \"ms\": ms,\n      \"tag\": value,\n      \"startTime\": timers[name]\n    };\n    timings[job][field].push(data);\n    //Stringify and set the timing info\n    var t = JSON.stringify(timings);\n    $(this).parents(\".customTask\").find(\".tagtiming\").val(t);\n  });\n\n  //logic for submitting a result\n  $(\"input[type='submit']\").click(function(e) {\n    //if custom  validation fails, do not submit\n    if (!validate()) {\n      e.preventDefault();\n    }\n\n    //Store the timing information\n    var endTime = new Date().getTime();\n    var totalTime = endTime - startTime;\n    $(\".starttime\").val(startTime);\n    $(\".endtime\").val(endTime);\n    $(\".totaltime\").val(totalTime);\n\n    //store the annotations for each image\n    $(\".annotatable\").each(function() {\n      //get the annotations\n      var an = anno.getAnnotations(this.src);\n      var str_an = JSON.stringify(an);\n      //find the right element to store it in\n      var elem = $(\"img[src='\" + this.src + \"']\").parents(\".customTask\").find(\".annotations\");\n      elem.val(str_an);\n    });\n    return validate();\n  });\n\n\n  /**\n   * Resets the editor for the specified image.\n   * @param image is the URL\n   */\n\n  function resetEditor(image) {\n    //pre-select the \"name\" selection\n    $(\"img[src='\" + image + \"']\").parents(\".customTask\").find(\".tagtypeselection input[value='name']\").click();\n    //do not pre-select any certainty score\n    $(\"img[src='\" + image + \"']\").parents(\".customTask\").find(\".ratings input:checked\").prop(\"checked\", false);\n    //disable the save button\n    var save = $(\"img[src='\" + image + \"']\").parents(\".customTask\").find(\".annotorious-editor-button-save\");\n    save.hide();\n  }\n\n/*\n  * Show the validation message for the given field. Optional parameter to remove\n  * current validation messages (default = true)\n  */\n  function showValidationMessage(field, message, removeOtherValidation) {\n    //removeOtherValidation defaults to true;\n    removeOtherValidation = (typeof removeOtherValidation === \"undefined\") ? true : removeOtherValidation;\n\n    //find the cml_row the field belongs to\n    var row = field.parents(\".cml_row\").first();\n\n    //remove previous validation\n    if (removeOtherValidation) {\n      removeValidationMessage(field);\n    }\n\n    //create the outer div\n    var outerDiv = $(document.createElement(\"div\"));\n    outerDiv.css(\"margin\", \"0px\");\n    outerDiv.css(\"position\", \"relative\");\n    outerDiv.css(\"overflow\", \"hidden\");\n    outerDiv.css(\"height\", \"41px\");\n    //create the inner div\n    var innerDiv = $(document.createElement(\"div\"));\n    innerDiv.addClass(\"errorMessage\");\n    innerDiv.css(\"margin\", \"0px\");\n    innerDiv.css(\"overflow\", \"hidden\");\n    //create the text of the message\n    var text = $(document.createElement(\"p\")).append(message);\n    //add the text to the inner div\n    innerDiv.html(text);\n    //add the innerdiv to the outer div\n    outerDiv.append(innerDiv);\n    //hide the div\n    outerDiv.hide();\n    //add the outer div to the DOM before the cml_row of the field\n    outerDiv.insertBefore(row);\n    //show the outer div with a smoots animation\n    outerDiv.slideDown();\n  }\n\n/*\n  * Find the cml_row this field belongs to and removes all validation messages present\n  */\n  function removeValidationMessage(field) {\n    //find the cml_row the field belongs to\n    var row = field.parents(\".cml_row\").first();\n    //validation is the previous DOM element before the cml_row\n    var potentialValidation = row.prev(\"div\");\n    //it should contain an element with class \"errorMessage\"\n    var hasError = potentialValidation.find(\".errorMessage\");\n    if (hasError.length > 0) {\n      //hide the validation with a nice animation\n      potentialValidation.slideUp();\n      //remove the validation from the DOM\n      potentialValidation.remove();\n      //recurse this method to delete other existing validation for the field\n      removeValidationMessage(field);\n    }\n  }\n\n  /**\n   * Validates all the tasks in the job\n   */\n\n  function validate() {\n    var validates = true;\n    var duplicateMessage = \"Please enter different names in the fields\";\n\n    //loop over the tasks\n    var tasks = $(\".name1\").parents(\".customTask\");\n    tasks.each(function(index) {\n      //get the values of the name fields\n      var name1 = $(this).find(\".name1\");\n      var name2 = $(this).find(\".name2\");\n      var name3 = $(this).find(\".name3\");\n      var n1 = name1.hasClass(\"has_default\") ? \"\" : name1.val();\n      var n2 = name2.hasClass(\"has_default\") ? \"\" : name2.val();\n      var n3 = name3.hasClass(\"has_default\") ? \"\" : name3.val();\n\n      //if name2 is not empty and equals name1\n      if (n1.length > 0 && n2.length > 0 && n1 === n2) {\n        //validation fails\n        validates = false;\n        //display a validation message\n        showValidationMessage(name2, duplicateMessage);\n      } else {\n        removeValidationMessage(name2);\n      }\n      //if name3 is not empty and equals name1\n      if (n1.length > 0 && n3.length > 0 && n1 === n3) {\n        //validation fails\n        validates = false;\n        //display a validation message\n        showValidationMessage(name3, duplicateMessage);\n      } else {\n        removeValidationMessage(name3);\n      }\n\n      //if name3 is not empty and equals name2\n      if (n2.length > 0 && n3.length > 0 && n2 === n3) {\n        //validation fails\n        validates = false;\n        //display a validation message\n        showValidationMessage(name3, duplicateMessage);\n      } else {\n        removeValidationMessage(name3);\n      }\n    });\n\n    //if validation fails, scroll upwards to the first failed field\n    if (!validates) {\n      $(\".errorMessage:visible\").first().parents(\".border\")[0].scrollIntoView();\n    }\n\n    return validates;\n  }\n\n  //adding low and high to the ratings\n  $(\".confidence tr td:first-child\").text(\"Uncertain\");\n  $(\".confidence tr td:last-child\").text(\"Certain\");\n});\n\n" }
{ "_id" : { "$oid" : "544104c0ddb23e2b27bad863" }, "type" : "NONE", "user_id" : "lukasz", "instructions" : " << NONE >>", "format" : "video", "version" : 0, "css" : "", "cml" : "NONE", "js" : "" }
