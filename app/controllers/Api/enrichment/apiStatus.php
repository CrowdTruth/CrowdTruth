<?php namespace Api\enrichment;

use \BaseController as BaseController;
use \Input as Input;
use \URL as URL;
use \Template as Template;

use \SoftwareComponents\ResultImporter as ResultImporter;
use \SoftwareComponents\DIVEUnitsImporter as DIVEUnitsImporter;

use \Exception;

class apiStatus extends BaseController
{
    public function getCapabilities()
    {
      // This list is generated by hand, but should be loaded from a catalog
      // of available templates.
      $templates = \Template::where("parameters", 'exists', true)->where("description", 'exists', true)->get()->toArray();
      $capabilities = array();
      if ($templates == NULL) {
        return [
                "status"  => "error",
                "message" => "CrowdTruth has no capabilities available for data enrichment",
                "capabilities" => [
                ]
             ];
      }
      foreach ($templates as $template) {
        $newCapability = array();
        $newCapability["id"] = $template["type"] . " on " . $template["platform"];
        $newCapability["description"] = $template["description"];
        $newCapability["parameters"] = array();
        foreach ($template["parameters"] as $parameter) {
          $newParameter = array();
          $newParameter["type"] = $parameter["type"];
          $newParameter["name"] = $parameter["name"];
          array_push($newCapability["parameters", $newParameter);
        }
        array_push($capabilities, $newCapability);
      }
        return [
          "status"  => "success",
          "message" => "Listing capabilities of CrowdTruth data enrichment",
          "capabilities" => $capabilities;
        ];
    }

    public function getStatus()
    {
      return [
                "status"  => "success",
                "message" => "CrowdTruth data enrichment is alive"
             ];
    }
}
?>
